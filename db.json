{"meta":{"version":1,"warehouse":"1.0.3"},"models":{"Asset":[{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","path":"vendors/velocity/velocity.ui.min.js","modified":0},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","path":"vendors/velocity/velocity.ui.js","modified":0},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","path":"vendors/velocity/velocity.min.js","modified":0},{"_id":"themes/next/source/vendors/velocity/velocity.js","path":"vendors/velocity/velocity.js","modified":0},{"_id":"themes/next/source/vendors/velocity/bower.json","path":"vendors/velocity/bower.json","modified":0},{"_id":"themes/next/source/vendors/jquery/index.js","path":"vendors/jquery/index.js","modified":0},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff2","modified":0},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff","modified":0},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","path":"vendors/font-awesome/fonts/fontawesome-webfont.ttf","modified":0},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","path":"vendors/font-awesome/fonts/fontawesome-webfont.svg","modified":0},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","path":"vendors/font-awesome/fonts/fontawesome-webfont.eot","modified":0},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","path":"vendors/font-awesome/fonts/FontAwesome.otf","modified":0},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","path":"vendors/font-awesome/css/font-awesome.min.css","modified":0},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","path":"vendors/font-awesome/css/font-awesome.css.map","modified":0},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","path":"vendors/font-awesome/css/font-awesome.css","modified":0},{"_id":"themes/next/source/vendors/font-awesome/bower.json","path":"vendors/font-awesome/bower.json","modified":0},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","path":"vendors/font-awesome/HELP-US-OUT.txt","modified":0},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","path":"vendors/fastclick/lib/fastclick.min.js","modified":0},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","path":"vendors/fastclick/lib/fastclick.js","modified":0},{"_id":"themes/next/source/vendors/fastclick/bower.json","path":"vendors/fastclick/bower.json","modified":0},{"_id":"themes/next/source/vendors/fastclick/README.md","path":"vendors/fastclick/README.md","modified":0},{"_id":"themes/next/source/vendors/fastclick/LICENSE","path":"vendors/fastclick/LICENSE","modified":0},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","path":"vendors/fancybox/source/jquery.fancybox.pack.js","modified":0},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","path":"vendors/fancybox/source/jquery.fancybox.js","modified":0},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","path":"vendors/fancybox/source/jquery.fancybox.css","modified":0},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-media.js","modified":0},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","path":"vendors/fancybox/source/helpers/fancybox_buttons.png","modified":0},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","path":"vendors/fancybox/source/fancybox_sprite@2x.png","modified":0},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","path":"vendors/fancybox/source/fancybox_sprite.png","modified":0},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","path":"vendors/fancybox/source/fancybox_overlay.png","modified":0},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","path":"vendors/fancybox/source/fancybox_loading@2x.gif","modified":0},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","path":"vendors/fancybox/source/fancybox_loading.gif","modified":0},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","path":"vendors/fancybox/source/blank.gif","modified":0},{"_id":"themes/next/source/js/ua-parser.min.js","path":"js/ua-parser.min.js","modified":0},{"_id":"themes/next/source/js/responsive-nav.js","path":"js/responsive-nav.js","modified":0},{"_id":"themes/next/source/js/nav-toggle.js","path":"js/nav-toggle.js","modified":0},{"_id":"themes/next/source/js/motion_global.js","path":"js/motion_global.js","modified":0},{"_id":"themes/next/source/js/motion_fallback.js","path":"js/motion_fallback.js","modified":0},{"_id":"themes/next/source/js/lazyload.js","path":"js/lazyload.js","modified":0},{"_id":"themes/next/source/js/hook-duoshuo.js","path":"js/hook-duoshuo.js","modified":0},{"_id":"themes/next/source/js/helpers.js","path":"js/helpers.js","modified":0},{"_id":"themes/next/source/js/fancy-box.js","path":"js/fancy-box.js","modified":0},{"_id":"themes/next/source/js/bootstrap.scrollspy.js","path":"js/bootstrap.scrollspy.js","modified":0},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0},{"_id":"themes/next/source/images/avatar.png","path":"images/avatar.png","modified":0},{"_id":"themes/next/source/fonts/icon-nav/icomoon.woff","path":"fonts/icon-nav/icomoon.woff","modified":0},{"_id":"themes/next/source/fonts/icon-nav/icomoon.ttf","path":"fonts/icon-nav/icomoon.ttf","modified":0},{"_id":"themes/next/source/fonts/icon-nav/icomoon.svg","path":"fonts/icon-nav/icomoon.svg","modified":0},{"_id":"themes/next/source/fonts/icon-nav/icomoon.eot","path":"fonts/icon-nav/icomoon.eot","modified":0},{"_id":"themes/next/source/fonts/icon-linecons/selection.json","path":"fonts/icon-linecons/selection.json","modified":0},{"_id":"themes/next/source/fonts/icon-linecons/icomoon.woff","path":"fonts/icon-linecons/icomoon.woff","modified":0},{"_id":"themes/next/source/fonts/icon-linecons/icomoon.ttf","path":"fonts/icon-linecons/icomoon.ttf","modified":0},{"_id":"themes/next/source/fonts/icon-linecons/icomoon.svg","path":"fonts/icon-linecons/icomoon.svg","modified":0},{"_id":"themes/next/source/fonts/icon-linecons/icomoon.eot","path":"fonts/icon-linecons/icomoon.eot","modified":0},{"_id":"themes/next/source/fonts/icon-icomoon/icomoon.woff","path":"fonts/icon-icomoon/icomoon.woff","modified":0},{"_id":"themes/next/source/fonts/icon-icomoon/icomoon.ttf","path":"fonts/icon-icomoon/icomoon.ttf","modified":0},{"_id":"themes/next/source/fonts/icon-icomoon/icomoon.svg","path":"fonts/icon-icomoon/icomoon.svg","modified":0},{"_id":"themes/next/source/fonts/icon-icomoon/icomoon.eot","path":"fonts/icon-icomoon/icomoon.eot","modified":0},{"_id":"themes/next/source/fonts/icon-fifty-shades/selection.json","path":"fonts/icon-fifty-shades/selection.json","modified":0},{"_id":"themes/next/source/fonts/icon-fifty-shades/icomoon.woff","path":"fonts/icon-fifty-shades/icomoon.woff","modified":0},{"_id":"themes/next/source/fonts/icon-fifty-shades/icomoon.ttf","path":"fonts/icon-fifty-shades/icomoon.ttf","modified":0},{"_id":"themes/next/source/fonts/icon-fifty-shades/icomoon.svg","path":"fonts/icon-fifty-shades/icomoon.svg","modified":0},{"_id":"themes/next/source/fonts/icon-fifty-shades/icomoon.eot","path":"fonts/icon-fifty-shades/icomoon.eot","modified":0},{"_id":"themes/next/source/fonts/icon-feather/selection.json","path":"fonts/icon-feather/selection.json","modified":0},{"_id":"themes/next/source/fonts/icon-feather/icomoon.woff","path":"fonts/icon-feather/icomoon.woff","modified":0},{"_id":"themes/next/source/fonts/icon-feather/icomoon.ttf","path":"fonts/icon-feather/icomoon.ttf","modified":0},{"_id":"themes/next/source/fonts/icon-feather/icomoon.svg","path":"fonts/icon-feather/icomoon.svg","modified":0},{"_id":"themes/next/source/fonts/icon-feather/icomoon.eot","path":"fonts/icon-feather/icomoon.eot","modified":0},{"_id":"themes/next/source/fonts/icon-default/selection.json","path":"fonts/icon-default/selection.json","modified":0},{"_id":"themes/next/source/fonts/icon-default/icomoon.woff","path":"fonts/icon-default/icomoon.woff","modified":0},{"_id":"themes/next/source/fonts/icon-default/icomoon.ttf","path":"fonts/icon-default/icomoon.ttf","modified":0},{"_id":"themes/next/source/fonts/icon-default/icomoon.svg","path":"fonts/icon-default/icomoon.svg","modified":0},{"_id":"themes/next/source/fonts/icon-default/icomoon.eot","path":"fonts/icon-default/icomoon.eot","modified":0},{"_id":"themes/next/source/css/responsive-nav.css","path":"css/responsive-nav.css","modified":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0}],"Cache":[{"_id":"source/_posts/iOS-持久化存储技术选型.md","shasum":"b1901f5376a9ab08ce66e08f5efae664def249e5","modified":1456463551000},{"_id":"source/_posts/自定义navigation controller过渡动画 2.md","shasum":"7b8e189660f1087a1d23ea1ea8a0004b9927cc5a","modified":1456478647000},{"_id":"source/_posts/自定义navigation controller过渡动画.md","shasum":"382a9fbbd0d9ef04c0dfefaeb503c4364407adbf","modified":1456463976000},{"_id":"source/about/index.md","shasum":"0d935ce330dbf128e78d443f5a3994bf446c5891","modified":1455594238000},{"_id":"source/tags/index.md","shasum":"fc87f95db862bdbff2352318d08e4526ea3cc440","modified":1454312601000},{"_id":"source/categories/index.md","shasum":"55d93b47edbe2c8504803010fc0b940338601823","modified":1454494390000},{"_id":"themes/next/source/css/_common/_page/home.styl","shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1445301916000},{"_id":"themes/next/source/css/_mixins/Mist.styl","shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1445301916000},{"_id":"themes/next/source/css/_mixins/custom.styl","shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1445301916000},{"_id":"themes/next/source/css/_mixins/default.styl","shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1445301916000},{"_id":"themes/next/source/css/_variables/custom.styl","shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1445301916000},{"_id":"themes/next/source/css/_variables/default.styl","shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1445301916000},{"_id":"themes/next/README.en.md","shasum":"565ba52b3825b85a9f05b41183caca7f18b741d4","modified":1445301916000},{"_id":"themes/next/README.md","shasum":"3319de8565699fc9642f76c41ee96b50f2234b6a","modified":1445301916000},{"_id":"themes/next/bower.json","shasum":"c27f03e42e91a205f1b2acbcf562f8b66e5a23c6","modified":1445301916000},{"_id":"themes/next/_config.yml","shasum":"ab6a6d7ee7a02cd8bf14849ea852e0d218d8bd63","modified":1457253753000},{"_id":"themes/next/languages/default.yml","shasum":"7e65ef918f16d0189055deb5f1616b9dedcb1920","modified":1445301916000},{"_id":"themes/next/languages/de.yml","shasum":"7a8de0e5665c52a1bf168c1e7dd222c8a74fb0ab","modified":1445301916000},{"_id":"themes/next/languages/en.yml","shasum":"7e65ef918f16d0189055deb5f1616b9dedcb1920","modified":1445301916000},{"_id":"themes/next/languages/pt.yml","shasum":"737225eee4b91f64db61742ce3f4ab4e8c039286","modified":1445301916000},{"_id":"themes/next/languages/zh-Hans.yml","shasum":"8af76df5557561050a950bdd7091d3bb3939c5c0","modified":1445301916000},{"_id":"themes/next/languages/ru.yml","shasum":"b4a827b9ddac9d5f6dca096fe513aeafb46a3e93","modified":1445301916000},{"_id":"themes/next/languages/zh-hk.yml","shasum":"3fc38103c9efa6f6c37149adbddb014ff85ec849","modified":1445301916000},{"_id":"themes/next/languages/fr-FR.yml","shasum":"6d097445342a9fb5235afea35d65bf5271b772f0","modified":1445301916000},{"_id":"themes/next/languages/zh-tw.yml","shasum":"8897a06e521b36c7a1226c72057c8357611eded8","modified":1445301916000},{"_id":"themes/next/layout/_macro/post-collapse.swig","shasum":"9032ae9056cb19b4c2d069d66ead7abf828f9922","modified":1445301916000},{"_id":"themes/next/layout/_layout.swig","shasum":"b2ec3dee90b732f0554f814f7fbd8243fb28ea00","modified":1456463405000},{"_id":"themes/next/layout/_macro/post.swig","shasum":"665acd3bf33ab23d438c26fdd3a85a0711a8256e","modified":1455433572000},{"_id":"themes/next/layout/_partials/footer.swig","shasum":"52aa5c4e0e6839ae9a63e3346a0c0d4b593dfcac","modified":1454494915000},{"_id":"themes/next/layout/_macro/sidebar.swig","shasum":"15ca9643d09ef90f7823ab13717f83f575ba6bc9","modified":1459864221000},{"_id":"themes/next/layout/_partials/old-browsers.swig","shasum":"dbbfea810bf3a2ed9c83b9a6683037175aacfc67","modified":1445301916000},{"_id":"themes/next/layout/_partials/head.swig","shasum":"0ab4bae607d0344804ec327f10fe7c37a5458e6f","modified":1457249220000},{"_id":"themes/next/layout/_partials/header.swig","shasum":"5e5fff6581d445b14cbdf287494797568e620178","modified":1457253908000},{"_id":"themes/next/layout/_partials/pagination.swig","shasum":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1445301916000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","shasum":"00c2b49f6289198b0b2b4e157e4ee783277f32a7","modified":1445301916000},{"_id":"themes/next/layout/_partials/search.swig","shasum":"64f14da26792a17bc27836c4e9d83190175f36e6","modified":1445301916000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","shasum":"eefe2388ff3d424694045eda21346989b123977c","modified":1445301916000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","shasum":"1868643531b2479acab5fa2986edc5fff965a13f","modified":1456457860000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","shasum":"63315fcf210799f894208c9f512737096df84962","modified":1445301916000},{"_id":"themes/next/layout/_scripts/analytics/baidu-analytics.swig","shasum":"7c43d66da93cde65b473a7d6db2a86f9a42647d6","modified":1445301916000},{"_id":"themes/next/layout/_scripts/analytics/facebook-sdk.swig","shasum":"334176d838ee528e58468d8bc74ff3a6d3f25b2b","modified":1445301916000},{"_id":"themes/next/layout/_scripts/analytics/google-analytics.swig","shasum":"30a23fa7e816496fdec0e932aa42e2d13098a9c2","modified":1445301916000},{"_id":"themes/next/layout/_scripts/analytics.swig","shasum":"33ca06b9bd9a15a19432d5396b85bd319f017319","modified":1445301916000},{"_id":"themes/next/layout/_scripts/baidushare.swig","shasum":"d726361945437cf6e48067b3dd041b7e36e98d85","modified":1445301916000},{"_id":"themes/next/layout/_scripts/bootstrap.scrollspy.swig","shasum":"85295f126836b95f0837d03e58228bb3cf8c4490","modified":1445301916000},{"_id":"themes/next/layout/_scripts/comments/disqus.swig","shasum":"3491d3cebabc8a28857200db28a1be65aad6adc2","modified":1445301916000},{"_id":"themes/next/layout/_scripts/comments/duoshuo.swig","shasum":"06b6cfaa9f2e05a9b0e8eb7c6d37cca92bcb9c77","modified":1445301916000},{"_id":"themes/next/layout/_scripts/fancy-box.swig","shasum":"41b4ff1446060c88c33bf666a32277dcf12129f0","modified":1445301916000},{"_id":"themes/next/layout/_scripts/helpers.swig","shasum":"4d2cbfca0aaf546a2b5813288073e824c1498fdf","modified":1445301916000},{"_id":"themes/next/layout/_scripts/motion.swig","shasum":"817705bfd1a1282cb6bf59094afe507e11455aa0","modified":1445301916000},{"_id":"themes/next/layout/_scripts/mathjax.swig","shasum":"df03220eb8526e17dc9c9f17780c2d6699367181","modified":1445301916000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","shasum":"b63ef233886538f30ced60344ac15d25e5f3e0af","modified":1455424520000},{"_id":"themes/next/layout/_scripts/tinysou.swig","shasum":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1445301916000},{"_id":"themes/next/layout/category.swig","shasum":"d6b3e1dc5e0b8deade9a084c463126e70188ee9b","modified":1445301916000},{"_id":"themes/next/layout/index.swig","shasum":"6cedd9e6850636d42e00ae5952a18fe581d22ab0","modified":1454471380000},{"_id":"themes/next/layout/archive.swig","shasum":"0c3ce594759f347ea90a4ce592a7a18e2ae4cc5c","modified":1445301916000},{"_id":"themes/next/scripts/merge-configs.js","shasum":"dfd147d1317e56d283f5e779f00608e913603b51","modified":1445301916000},{"_id":"themes/next/scripts/tags/center-quote.js","shasum":"535fc542781021c4326dec24d8495cbb1387634a","modified":1445301916000},{"_id":"themes/next/scripts/tags/full-image.js","shasum":"6329dc1815721050fd4c24a8accd8f4cbdb52330","modified":1445301916000},{"_id":"themes/next/layout/page.swig","shasum":"8019d02232a6dd1a665b6a4d2daef8e5dd2f0049","modified":1445301916000},{"_id":"themes/next/scripts/tags/group-pictures.js","shasum":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1445301916000},{"_id":"themes/next/layout/post.swig","shasum":"a84457e8ced46e63bc7a8a9e0541a6ba53122a92","modified":1454310829000},{"_id":"themes/next/layout/tag.swig","shasum":"aab44af54fcbc66fea4ad12b2767ffca3eadd451","modified":1445301916000},{"_id":"themes/next/source/css/_common/_component/buttons.styl","shasum":"81063e0979f04a0f9af37f321d7321dda9abf593","modified":1445301916000},{"_id":"themes/next/source/css/_common/_component/back-to-top.styl","shasum":"712f6afe564aff97febf25ca3aec71a709825817","modified":1457254131000},{"_id":"themes/next/source/css/_common/_component/blockquote-center.styl","shasum":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1445301916000},{"_id":"themes/next/source/css/_common/_component/comments.styl","shasum":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1445301916000},{"_id":"themes/next/source/css/_common/_component/duoshuo.styl","shasum":"c307f1e4827d7cb82816a5f9de109ae14ed4199c","modified":1445301916000},{"_id":"themes/next/source/css/_common/_component/group-pictures.styl","shasum":"1ee40743000173495728855f734081eb2b6167cc","modified":1445301916000},{"_id":"themes/next/source/css/_common/_component/pagination.styl","shasum":"7e0dd81e4105a7999853a78584880445946eff98","modified":1455434125000},{"_id":"themes/next/source/css/_common/_component/gallery.styl","shasum":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1445301916000},{"_id":"themes/next/source/css/_common/_component/jiathis.styl","shasum":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1445301916000},{"_id":"themes/next/source/css/_common/_component/posts-collapse.styl","shasum":"6750b61236eb359028da8f2c4765f7c89b03dc9a","modified":1445301916000},{"_id":"themes/next/source/css/_common/_component/posts-type.styl","shasum":"40b593134bf96d1d6095b3439d47820659d7f10b","modified":1445301916000},{"_id":"themes/next/source/css/_common/_component/tag-cloud.styl","shasum":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1445301916000},{"_id":"themes/next/source/css/_common/_component/posts-expand.styl","shasum":"d86cd13637634fe408646ec8d1fa1989f0498d31","modified":1455782056000},{"_id":"themes/next/source/css/_common/_component/posts.styl","shasum":"b11e8d54d46569b0e63c14567d24772be6d4fdd2","modified":1455438827000},{"_id":"themes/next/source/css/_common/_core/helpers.styl","shasum":"d339d114e52a9abbc797ec236a8a770c29e288a6","modified":1445301916000},{"_id":"themes/next/source/css/_common/_core/normalize.styl","shasum":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1445301916000},{"_id":"themes/next/source/css/_common/_core/base.styl","shasum":"473c90e1d1b91ff6caabe956b499255bb12bc7a8","modified":1455611405000},{"_id":"themes/next/source/css/_common/_core/tables.styl","shasum":"5f766cf26f966dbf9dcfe681f40ab9032e3e8a08","modified":1445301916000},{"_id":"themes/next/source/css/_common/_fonts/icon-feather.styl","shasum":"80413afacfa656322100ce1900fed1ebcd8f8f44","modified":1445301916000},{"_id":"themes/next/source/css/_common/_fonts/icon-default.styl","shasum":"8b809aef383bebaeb3f282b47675f3a364ce3569","modified":1445301916000},{"_id":"themes/next/source/css/_common/_fonts/icon-font.styl","shasum":"ec3f86739bede393cafcd3e31052c01115ae20d6","modified":1445301916000},{"_id":"themes/next/source/css/_common/_fonts/icon-linecons.styl","shasum":"9cdbedb3627ac941cfb063b152abe5a75c3c699a","modified":1445301916000},{"_id":"themes/next/source/css/_common/_fonts/icon-fifty-shades.styl","shasum":"249f75bafa26b99d272352c0646e7497ea680b39","modified":1445301916000},{"_id":"themes/next/source/css/_common/_page/archive.styl","shasum":"dff879f55ca65fa79c07e9098719e53eeea7ac88","modified":1445301916000},{"_id":"themes/next/source/css/_common/_core/scaffolding.styl","shasum":"169a1651248453cf8dab6368fc398e53a04ac7df","modified":1454471138000},{"_id":"themes/next/source/css/_common/_section/body.styl","shasum":"ca1a4766cbe25baac757c6b47a4858d221afdc40","modified":1445301916000},{"_id":"themes/next/source/css/_common/_page/post-detail.styl","shasum":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1445301916000},{"_id":"themes/next/source/css/_common/_page/categories.styl","shasum":"ca3567758beed9527126efd998fe723212d1df99","modified":1455436092000},{"_id":"themes/next/source/css/_common/_section/footer.styl","shasum":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1445301916000},{"_id":"themes/next/source/css/_common/_section/media.styl","shasum":"eead38dd5fd0a16e48773095232a15fce25290fd","modified":1454484319000},{"_id":"themes/next/source/css/_common/_section/header.styl","shasum":"c23ce136ae34269b42547468b243aba7713d168e","modified":1455436748000},{"_id":"themes/next/source/css/_common/_section/layout.styl","shasum":"b9226522f3b3f80044e77503be9f13daa0baef99","modified":1455437613000},{"_id":"themes/next/source/css/_common/_vendor/highlight/theme.styl","shasum":"ae19721ceee5ba460e131cb2427dae3c1ff39d6f","modified":1445301916000},{"_id":"themes/next/source/css/_common/_vendor/highlight/highlight.styl","shasum":"9a8655c40d058ed8351b7f3d9419f34779862bb3","modified":1455853257000},{"_id":"themes/next/source/css/_common/_section/sidebar.styl","shasum":"f85cdea47e992bec9a11386827a551f8389c2250","modified":1455430264000},{"_id":"themes/next/source/css/_custom/about.styl","shasum":"2703a2adba2a09ac204b4b9156668d2006d55263","modified":1455594412000},{"_id":"themes/next/source/css/_custom/response-nav.styl","shasum":"ecabce833e1d1f84465fd6372ab1ff61f9072aab","modified":1455418589000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","shasum":"d50c2a9ae363d26ed2e9bc226a9dc7abeb9ace1b","modified":1445301916000},{"_id":"themes/next/source/css/_mixins/base.styl","shasum":"9c1962e90fae8af4dd475ca503e203d2816b6d8f","modified":1457247742000},{"_id":"themes/next/source/css/_custom/custom.styl","shasum":"4d63af7be00522af3ded561ffd35240a52dc4cb9","modified":1457248671000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","shasum":"1631a430655eadb485574d1a9bedd49460988b11","modified":1445301916000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","shasum":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1445301916000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","shasum":"fc7d96b897290dbd93bc8c515a2058fc4c374ea7","modified":1445301916000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","shasum":"b7366f28bd7902bfc1dce24f2bd5ae5439fb6e2f","modified":1445301916000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","shasum":"5a8036fc61207ca0fe38c9782ed2f686fbf764be","modified":1445301916000},{"_id":"themes/next/source/css/_schemes/default/_logo.styl","shasum":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1445301916000},{"_id":"themes/next/source/css/_schemes/default/_menu.styl","shasum":"4bba29cece65ffc5122f4e052063dea4439fe4ae","modified":1445301916000},{"_id":"themes/next/source/css/_variables/Mist.styl","shasum":"c80ca1d6d65d7167d7a5532470716c9f138d9500","modified":1454402241000},{"_id":"themes/next/source/css/_schemes/default/index.styl","shasum":"159464cb8a7e01e32db9ec70dec391ec70a72f9c","modified":1445301916000},{"_id":"themes/next/source/css/_schemes/default/_search.styl","shasum":"c524bccdc554349106d1c8be9c3f275d4c0d4281","modified":1445301916000},{"_id":"themes/next/source/css/_variables/base.styl","shasum":"112b8d86cf6cdc8208bc2c16ca43c2052f23636e","modified":1455436059000},{"_id":"themes/next/source/fonts/icon-default/icomoon.eot","shasum":"90763e97be18be78e65749075225cceeddc6fa8a","modified":1445301916000},{"_id":"themes/next/source/fonts/icon-default/icomoon.svg","shasum":"f92ad8cddc250f0bb5ca466fca95d321987e127e","modified":1445301916000},{"_id":"themes/next/source/css/main.styl","shasum":"5d1ae866dda4379a5d90fb8054638cc1f3e96966","modified":1455593831000},{"_id":"themes/next/source/css/responsive-nav.css","shasum":"779b567a213f2c852ca64844c707d38ddec07c13","modified":1454471183000},{"_id":"themes/next/source/fonts/icon-default/icomoon.ttf","shasum":"c093408e6030221cafc1f79d897f1fb5283c1178","modified":1445301916000},{"_id":"themes/next/source/fonts/icon-default/icomoon.woff","shasum":"dbe0368f2a65d87b13234cfea29d9783892fc7a8","modified":1445301916000},{"_id":"themes/next/source/fonts/icon-default/selection.json","shasum":"dc07c29f687315f9458f6b251c214768af865fb2","modified":1445301916000},{"_id":"themes/next/source/fonts/icon-feather/icomoon.eot","shasum":"11554b9e9d5b9f535ba96cbb27d45d8c8f1689fd","modified":1445301916000},{"_id":"themes/next/source/fonts/icon-feather/icomoon.ttf","shasum":"b2bbae4b613403cf61ad25037913378da1c07b8f","modified":1445301916000},{"_id":"themes/next/source/fonts/icon-feather/icomoon.svg","shasum":"d5eb756eefda9b454dcb23c2b1cefd4051d18d41","modified":1445301916000},{"_id":"themes/next/source/fonts/icon-feather/icomoon.woff","shasum":"2ea1c59c17422798e64ee6f4e9ce1f7aff1a06a5","modified":1445301916000},{"_id":"themes/next/source/fonts/icon-fifty-shades/icomoon.eot","shasum":"da86ba5df72d1288de9e9633e5f528062dd427d5","modified":1445301916000},{"_id":"themes/next/source/fonts/icon-feather/selection.json","shasum":"06ea91e3f98ebe1080087acad4356802bc5b6ebf","modified":1445301916000},{"_id":"themes/next/source/fonts/icon-fifty-shades/icomoon.ttf","shasum":"72fe82e1f3db52414eed706952d385af241cb196","modified":1445301916000},{"_id":"themes/next/source/fonts/icon-fifty-shades/icomoon.svg","shasum":"1a4afd739e1f8eb8d430dbdd29e36a9999802e8d","modified":1445301916000},{"_id":"themes/next/source/fonts/icon-fifty-shades/icomoon.woff","shasum":"4de6a74f523dee33d95dde61caae5809f9a5d448","modified":1445301916000},{"_id":"themes/next/source/fonts/icon-icomoon/icomoon.eot","shasum":"301fcf00c24750dddf1c529f944ca62c7f1a217d","modified":1445301916000},{"_id":"themes/next/source/fonts/icon-fifty-shades/selection.json","shasum":"fdd09098d1c3688e2c88cf33fd51e76b383b6d7f","modified":1445301916000},{"_id":"themes/next/source/fonts/icon-icomoon/icomoon.ttf","shasum":"f399713d1c9400d4d3373e38991a7e362a754a94","modified":1445301916000},{"_id":"themes/next/source/fonts/icon-icomoon/icomoon.svg","shasum":"e316347805eb93425faa678611c5e42a7152da8f","modified":1445301916000},{"_id":"themes/next/source/fonts/icon-icomoon/icomoon.woff","shasum":"05f1ec0bd307da5e731a86eb4961589a6042aebb","modified":1445301916000},{"_id":"themes/next/source/fonts/icon-linecons/icomoon.eot","shasum":"e2d7f040428a632f3c50bfa94083b759936effc2","modified":1445301916000},{"_id":"themes/next/source/fonts/icon-linecons/icomoon.svg","shasum":"808eaf7d61f7e67c76976265c885e79c36920f0b","modified":1445301916000},{"_id":"themes/next/source/fonts/icon-linecons/icomoon.ttf","shasum":"078068206684e4f185b0187ad3cee16f54a287d7","modified":1445301916000},{"_id":"themes/next/source/fonts/icon-linecons/selection.json","shasum":"db4ce25d31449ecc6685b32e145252103967bb5c","modified":1445301916000},{"_id":"themes/next/source/fonts/icon-linecons/icomoon.woff","shasum":"0b07ee6ceda3b1bceb40c1e7379b3aa48dcc15a8","modified":1445301916000},{"_id":"themes/next/source/fonts/icon-nav/icomoon.eot","shasum":"7d30074980ae8e3c4be711488ed87e336026632f","modified":1433950424000},{"_id":"themes/next/source/fonts/icon-nav/icomoon.svg","shasum":"75076bba3278257429ee995a8e9b14501b57b40e","modified":1433950424000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","shasum":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1445301916000},{"_id":"themes/next/source/fonts/icon-nav/icomoon.ttf","shasum":"9a5862aee230544d4e09227d805e4cb2339f5b3f","modified":1433950424000},{"_id":"themes/next/source/fonts/icon-nav/icomoon.woff","shasum":"c8cb3e9f1a52b64e9fd769b6118c8e73dc384202","modified":1433950424000},{"_id":"themes/next/source/images/avatar.png","shasum":"b05ec31b2791aa47da000570c573ef52644a5480","modified":1454380196000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","shasum":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1445301916000},{"_id":"themes/next/source/images/cc-by.svg","shasum":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1445301916000},{"_id":"themes/next/source/images/cc-by-sa.svg","shasum":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1445301916000},{"_id":"themes/next/source/images/cc-by-nc.svg","shasum":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1445301916000},{"_id":"themes/next/source/images/cc-by-nd.svg","shasum":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1445301916000},{"_id":"themes/next/source/images/placeholder.gif","shasum":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1445301916000},{"_id":"themes/next/source/images/cc-zero.svg","shasum":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1445301916000},{"_id":"themes/next/source/images/loading.gif","shasum":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1445301916000},{"_id":"themes/next/source/images/quote-l.svg","shasum":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1445301916000},{"_id":"themes/next/source/images/quote-r.svg","shasum":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1445301916000},{"_id":"themes/next/source/js/bootstrap.scrollspy.js","shasum":"ae7bdce88b515aade4eea8bf7407eec458bcd625","modified":1445301916000},{"_id":"themes/next/source/js/fancy-box.js","shasum":"62d38913d8e8a5736ecc48a0b343f67e86a0ae32","modified":1445301916000},{"_id":"themes/next/source/images/searchicon.png","shasum":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1445301916000},{"_id":"themes/next/source/js/hook-duoshuo.js","shasum":"de3c14f49ac5f20b2065377dd1872749d067ebf9","modified":1445301916000},{"_id":"themes/next/source/js/helpers.js","shasum":"c2117b0ec653df4c45dd9d9575b190cbe1035335","modified":1445301916000},{"_id":"themes/next/source/js/lazyload.js","shasum":"b92e9acdc7afc15468314c03f4a643b0c93944cf","modified":1445301916000},{"_id":"themes/next/source/js/nav-toggle.js","shasum":"78b59f1beb12adea0d7f9bcf4377cb699963f220","modified":1445301916000},{"_id":"themes/next/source/js/motion_fallback.js","shasum":"a767d522c65a8b2fbad49135c9332135c6785c3e","modified":1454497081000},{"_id":"themes/next/source/js/ua-parser.min.js","shasum":"acf0ee6a47ffb7231472b56e43996e3f947c258a","modified":1445301916000},{"_id":"themes/next/source/js/motion_global.js","shasum":"89cd590f8b95cf828cb153a256fdda6e3f4dfaa5","modified":1457248997000},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1445301916000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1445301916000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","shasum":"273b123496a42ba45c3416adb027cd99745058b0","modified":1445301916000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1445301916000},{"_id":"themes/next/source/js/responsive-nav.js","shasum":"a7bceeb6cb478dcf9fd1b90166eb0b777881a2ce","modified":1454471183000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","shasum":"17df19f97628e77be09c352bf27425faea248251","modified":1445301916000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","shasum":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1445301916000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","shasum":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1445301916000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","shasum":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1445301916000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","shasum":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1445301916000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","shasum":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1445301916000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","shasum":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1445301916000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","shasum":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1445301916000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","shasum":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1445301916000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","shasum":"53360764b429c212f424399384417ccc233bb3be","modified":1445301916000},{"_id":"themes/next/source/vendors/fastclick/README.md","shasum":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1445301916000},{"_id":"themes/next/source/vendors/fastclick/LICENSE","shasum":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1445301916000},{"_id":"themes/next/source/vendors/fastclick/bower.json","shasum":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1445301916000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","shasum":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1445301916000},{"_id":"themes/next/source/vendors/font-awesome/bower.json","shasum":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1445301916000},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","shasum":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1445301916000},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","shasum":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1445301916000},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","shasum":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1445301916000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","shasum":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1445301916000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","shasum":"0189d278706509412bac4745f96c83984e1d59f4","modified":1445301916000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","shasum":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1445301916000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","shasum":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1445301916000},{"_id":"themes/next/source/vendors/velocity/bower.json","shasum":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1445301916000},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","shasum":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1445301916000},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","shasum":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1445301916000},{"_id":"themes/next/test/intern.js","shasum":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1445301916000},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","shasum":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1445301916000},{"_id":"themes/next/test/helpers.js","shasum":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1445301916000},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","shasum":"0112e96f327d413938d37c1693806f468ffdbace","modified":1445301916000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","shasum":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1445301916000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","shasum":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1445301916000},{"_id":"themes/next/source/vendors/jquery/index.js","shasum":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1445301916000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","shasum":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1445301916000},{"_id":"themes/next/source/vendors/velocity/velocity.js","shasum":"e63dc7cea055ca60a95d286f32349d88b10c5a4d","modified":1445301916000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","shasum":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1445301916000},{"_id":"public/vendors/velocity/velocity.ui.min.js","modified":1456465709528,"shasum":"ed5e534cd680a25d8d14429af824f38a2c7d9908"},{"_id":"public/vendors/velocity/velocity.ui.js","modified":1456465709532,"shasum":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df"},{"_id":"public/vendors/velocity/velocity.min.js","modified":1456465709534,"shasum":"2f1afadc12e4cf59ef3b405308d21baa97e739c6"},{"_id":"public/vendors/velocity/velocity.js","modified":1456465709536,"shasum":"9f08181baea0cc0e906703b7e5df9111b9ef3373"},{"_id":"public/vendors/velocity/bower.json","modified":1456465709538,"shasum":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409"},{"_id":"public/vendors/jquery/index.js","modified":1456465709540,"shasum":"41b4bfbaa96be6d1440db6e78004ade1c134e276"},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff2","modified":1456465709546,"shasum":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea"},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff","modified":1456465709550,"shasum":"507970402e328b2baeb05bde73bf9ded4e2c3a2d"},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.ttf","modified":1456465709553,"shasum":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9"},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.svg","modified":1456465709556,"shasum":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824"},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.eot","modified":1456465709562,"shasum":"b3c2f08e73320135b69c23a3908b87a12053a2f6"},{"_id":"public/vendors/font-awesome/fonts/FontAwesome.otf","modified":1456465709564,"shasum":"0112e96f327d413938d37c1693806f468ffdbace"},{"_id":"public/vendors/font-awesome/css/font-awesome.min.css","modified":1456465709567,"shasum":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22"},{"_id":"public/vendors/font-awesome/css/font-awesome.css.map","modified":1456465709569,"shasum":"0189d278706509412bac4745f96c83984e1d59f4"},{"_id":"public/vendors/font-awesome/css/font-awesome.css","modified":1456465709571,"shasum":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7"},{"_id":"public/vendors/font-awesome/bower.json","modified":1456465709575,"shasum":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad"},{"_id":"public/vendors/font-awesome/HELP-US-OUT.txt","modified":1456465709578,"shasum":"69a4c537d167b68a0ccf1c6febd138aeffca60d6"},{"_id":"public/vendors/fastclick/lib/fastclick.min.js","modified":1456465709581,"shasum":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18"},{"_id":"public/vendors/fastclick/lib/fastclick.js","modified":1456465709583,"shasum":"06cef196733a710e77ad7e386ced6963f092dc55"},{"_id":"public/vendors/fastclick/bower.json","modified":1456465709585,"shasum":"4dcecf83afddba148464d5339c93f6d0aa9f42e9"},{"_id":"public/vendors/fastclick/README.html","modified":1456465709612,"shasum":"627cdd7a56fc7d9c169b9f6afedd74f77e6d3d06"},{"_id":"public/vendors/fastclick/LICENSE","modified":1456465709620,"shasum":"dcd5b6b43095d9e90353a28b09cb269de8d4838e"},{"_id":"public/vendors/fancybox/source/jquery.fancybox.pack.js","modified":1456465709622,"shasum":"53360764b429c212f424399384417ccc233bb3be"},{"_id":"public/vendors/fancybox/source/jquery.fancybox.js","modified":1456465709627,"shasum":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4"},{"_id":"public/vendors/fancybox/source/jquery.fancybox.css","modified":1456465709630,"shasum":"5f163444617b6cf267342f06ac166a237bb62df9"},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1456465709633,"shasum":"53e194f4a72e649c04fb586dd57762b8c022800b"},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1456465709636,"shasum":"4ac329c16a5277592fc12a37cca3d72ca4ec292f"},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-media.js","modified":1456465709640,"shasum":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d"},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1456465709642,"shasum":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876"},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1456465709645,"shasum":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8"},{"_id":"public/vendors/fancybox/source/helpers/fancybox_buttons.png","modified":1456465709646,"shasum":"e385b139516c6813dcd64b8fc431c364ceafe5f3"},{"_id":"public/vendors/fancybox/source/fancybox_sprite@2x.png","modified":1456465709648,"shasum":"30c58913f327e28f466a00f4c1ac8001b560aed8"},{"_id":"public/vendors/fancybox/source/fancybox_sprite.png","modified":1456465709650,"shasum":"17df19f97628e77be09c352bf27425faea248251"},{"_id":"public/vendors/fancybox/source/fancybox_overlay.png","modified":1456465709653,"shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0"},{"_id":"public/vendors/fancybox/source/fancybox_loading@2x.gif","modified":1456465709655,"shasum":"273b123496a42ba45c3416adb027cd99745058b0"},{"_id":"public/vendors/fancybox/source/fancybox_loading.gif","modified":1456465709657,"shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c"},{"_id":"public/vendors/fancybox/source/blank.gif","modified":1456465709659,"shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a"},{"_id":"public/js/ua-parser.min.js","modified":1456465709662,"shasum":"acf0ee6a47ffb7231472b56e43996e3f947c258a"},{"_id":"public/js/responsive-nav.js","modified":1456465709672,"shasum":"a7bceeb6cb478dcf9fd1b90166eb0b777881a2ce"},{"_id":"public/js/nav-toggle.js","modified":1456465709675,"shasum":"78b59f1beb12adea0d7f9bcf4377cb699963f220"},{"_id":"public/js/motion_global.js","modified":1459861744869,"shasum":"89cd590f8b95cf828cb153a256fdda6e3f4dfaa5"},{"_id":"public/js/motion_fallback.js","modified":1456465709678,"shasum":"a767d522c65a8b2fbad49135c9332135c6785c3e"},{"_id":"public/js/lazyload.js","modified":1456465709680,"shasum":"b92e9acdc7afc15468314c03f4a643b0c93944cf"},{"_id":"public/js/hook-duoshuo.js","modified":1456465709683,"shasum":"c5db82a2549b6be51e58a69a6f1c2e5afef5a20e"},{"_id":"public/js/helpers.js","modified":1456465709684,"shasum":"c2117b0ec653df4c45dd9d9575b190cbe1035335"},{"_id":"public/js/fancy-box.js","modified":1456465709685,"shasum":"62d38913d8e8a5736ecc48a0b343f67e86a0ae32"},{"_id":"public/js/bootstrap.scrollspy.js","modified":1456465709687,"shasum":"ae7bdce88b515aade4eea8bf7407eec458bcd625"},{"_id":"public/images/searchicon.png","modified":1456465709690,"shasum":"67727a6a969be0b2659b908518fa6706eed307b8"},{"_id":"public/images/quote-r.svg","modified":1456465709692,"shasum":"e60ae504f9d99b712c793c3740c6b100d057d4ec"},{"_id":"public/images/quote-l.svg","modified":1456465709694,"shasum":"94e870b4c8c48da61d09522196d4dd40e277a98f"},{"_id":"public/images/placeholder.gif","modified":1456465709696,"shasum":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b"},{"_id":"public/images/loading.gif","modified":1456465709698,"shasum":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b"},{"_id":"public/images/cc-zero.svg","modified":1456465709700,"shasum":"87669bf8ac268a91d027a0a4802c92a1473e9030"},{"_id":"public/images/cc-by.svg","modified":1456465709703,"shasum":"28a0a4fe355a974a5e42f68031652b76798d4f7e"},{"_id":"public/images/cc-by-sa.svg","modified":1456465709706,"shasum":"aa4742d733c8af8d38d4c183b8adbdcab045872e"},{"_id":"public/images/cc-by-nd.svg","modified":1456465709710,"shasum":"c563508ce9ced1e66948024ba1153400ac0e0621"},{"_id":"public/images/cc-by-nc.svg","modified":1456465709716,"shasum":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7"},{"_id":"public/images/cc-by-nc-sa.svg","modified":1456465709719,"shasum":"3031be41e8753c70508aa88e84ed8f4f653f157e"},{"_id":"public/images/cc-by-nc-nd.svg","modified":1456465709721,"shasum":"c6524ece3f8039a5f612feaf865d21ec8a794564"},{"_id":"public/images/avatar.png","modified":1456465709724,"shasum":"b05ec31b2791aa47da000570c573ef52644a5480"},{"_id":"public/fonts/icon-nav/icomoon.woff","modified":1456465709728,"shasum":"c8cb3e9f1a52b64e9fd769b6118c8e73dc384202"},{"_id":"public/fonts/icon-nav/icomoon.ttf","modified":1456465709735,"shasum":"9a5862aee230544d4e09227d805e4cb2339f5b3f"},{"_id":"public/fonts/icon-nav/icomoon.svg","modified":1456465709744,"shasum":"75076bba3278257429ee995a8e9b14501b57b40e"},{"_id":"public/fonts/icon-nav/icomoon.eot","modified":1456465709746,"shasum":"7d30074980ae8e3c4be711488ed87e336026632f"},{"_id":"public/fonts/icon-linecons/selection.json","modified":1456465709748,"shasum":"68da6ea1b3ab9355d42694bf5745071cdefa4a65"},{"_id":"public/fonts/icon-linecons/icomoon.woff","modified":1456465709752,"shasum":"0b07ee6ceda3b1bceb40c1e7379b3aa48dcc15a8"},{"_id":"public/fonts/icon-linecons/icomoon.ttf","modified":1456465709757,"shasum":"078068206684e4f185b0187ad3cee16f54a287d7"},{"_id":"public/fonts/icon-linecons/icomoon.svg","modified":1456465709759,"shasum":"808eaf7d61f7e67c76976265c885e79c36920f0b"},{"_id":"public/fonts/icon-linecons/icomoon.eot","modified":1456465709761,"shasum":"e2d7f040428a632f3c50bfa94083b759936effc2"},{"_id":"public/fonts/icon-icomoon/icomoon.woff","modified":1456465709763,"shasum":"05f1ec0bd307da5e731a86eb4961589a6042aebb"},{"_id":"public/fonts/icon-icomoon/icomoon.ttf","modified":1456465709765,"shasum":"f399713d1c9400d4d3373e38991a7e362a754a94"},{"_id":"public/fonts/icon-icomoon/icomoon.svg","modified":1456465709767,"shasum":"e316347805eb93425faa678611c5e42a7152da8f"},{"_id":"public/fonts/icon-icomoon/icomoon.eot","modified":1456465709770,"shasum":"301fcf00c24750dddf1c529f944ca62c7f1a217d"},{"_id":"public/fonts/icon-fifty-shades/selection.json","modified":1456465709774,"shasum":"e5a5042e8e516b1d30fa3b1206d2c74921cec72b"},{"_id":"public/fonts/icon-fifty-shades/icomoon.woff","modified":1456465709777,"shasum":"4de6a74f523dee33d95dde61caae5809f9a5d448"},{"_id":"public/fonts/icon-fifty-shades/icomoon.ttf","modified":1456465709779,"shasum":"72fe82e1f3db52414eed706952d385af241cb196"},{"_id":"public/fonts/icon-fifty-shades/icomoon.svg","modified":1456465709781,"shasum":"1a4afd739e1f8eb8d430dbdd29e36a9999802e8d"},{"_id":"public/fonts/icon-fifty-shades/icomoon.eot","modified":1456465709783,"shasum":"da86ba5df72d1288de9e9633e5f528062dd427d5"},{"_id":"public/fonts/icon-feather/selection.json","modified":1456465709784,"shasum":"d95a90b0d541e48b049902090c0d008ad92b4115"},{"_id":"public/fonts/icon-feather/icomoon.woff","modified":1456465709786,"shasum":"2ea1c59c17422798e64ee6f4e9ce1f7aff1a06a5"},{"_id":"public/fonts/icon-feather/icomoon.ttf","modified":1456465709788,"shasum":"b2bbae4b613403cf61ad25037913378da1c07b8f"},{"_id":"public/fonts/icon-feather/icomoon.svg","modified":1456465709792,"shasum":"d5eb756eefda9b454dcb23c2b1cefd4051d18d41"},{"_id":"public/fonts/icon-feather/icomoon.eot","modified":1456465709794,"shasum":"11554b9e9d5b9f535ba96cbb27d45d8c8f1689fd"},{"_id":"public/fonts/icon-default/selection.json","modified":1456465709796,"shasum":"ff1b9b78eced4d0368d14cc192ac67a0dd498593"},{"_id":"public/fonts/icon-default/icomoon.woff","modified":1456465709798,"shasum":"dbe0368f2a65d87b13234cfea29d9783892fc7a8"},{"_id":"public/fonts/icon-default/icomoon.ttf","modified":1456465709800,"shasum":"c093408e6030221cafc1f79d897f1fb5283c1178"},{"_id":"public/fonts/icon-default/icomoon.svg","modified":1456465709802,"shasum":"f92ad8cddc250f0bb5ca466fca95d321987e127e"},{"_id":"public/fonts/icon-default/icomoon.eot","modified":1456465709804,"shasum":"90763e97be18be78e65749075225cceeddc6fa8a"},{"_id":"public/css/responsive-nav.css","modified":1456465709806,"shasum":"779b567a213f2c852ca64844c707d38ddec07c13"},{"_id":"public/css/main.css","modified":1456465710211,"shasum":"0e09ee3e6bf34c7e2895198ee84ffeb0fdc8e224"},{"_id":"public/tags/index.html","modified":1459861744923,"shasum":"b4a4fbffecbac909a0ca4c91443cd10eae75f863"},{"_id":"public/categories/index.html","modified":1459861744963,"shasum":"27c459830c963a112278fb3650506eafaf80fbb4"},{"_id":"public/about/index.html","modified":1459861744990,"shasum":"a47c71e7897cd97929413231bde4bd8a58f961ae"},{"_id":"public/2016/02/22/iOS-endorance-storage.html","modified":1459861745100,"shasum":"3032952a8f83232d35fb864527216503729b823b"},{"_id":"public/2016/02/18/custom_navigation_transition_2.html","modified":1459861745154,"shasum":"7be0e92924e368009bea26b013a8efdcd41ebfe9"},{"_id":"public/2016/02/01/custom_navigation_transition.html","modified":1459861745210,"shasum":"34d1b21943e5e56957f5b6d87ff15891fbc771ca"},{"_id":"public/archives/index.html","modified":1459861745318,"shasum":"c35822b66cb558a66c13cf82c66d87abb8b299db"},{"_id":"public/archives/2016/index.html","modified":1459861745351,"shasum":"aedbe34b81089fdbd9c9e83e8871f5b8a51e20d2"},{"_id":"public/archives/2016/02/index.html","modified":1459861745381,"shasum":"86888635c89937919f2eac90334b5736069ad370"},{"_id":"public/categories/iOS/index.html","modified":1459861745233,"shasum":"abb2959f29ef4143d39cb0addcdc814f9056f54d"},{"_id":"public/categories/Swift过渡指南/index.html","modified":1459861745258,"shasum":"9dbf2324e9b7ea662a8a5014e7767a984e536367"},{"_id":"public/index.html","modified":1459861745462,"shasum":"21fd010c95c9d4d89513243cfeb4c4e071046359"},{"_id":"source/_posts/在iOS项目中导入React Native.md","shasum":"45cc1bfa81a4434183a9b9a82759ef8a8b41bf8d","modified":1459861661000},{"_id":"public/2016/04/05/react-native-in-iOS.html","modified":1459861745059,"shasum":"1b6d9e09022f2c67c4145b36499c4c7ef7a15bbe"},{"_id":"public/categories/React-Native/index.html","modified":1459861745288,"shasum":"9a668465f3c2285dc575a1bcab0b479ed23f3f2f"},{"_id":"public/archives/2016/04/index.html","modified":1459861745407,"shasum":"b8528fcaee238f28782f701acbf823182b7799e2"}],"Category":[{"name":"iOS","_id":"cil3a2tkw00015w2r2jkgtj9m"},{"name":"Swift过渡指南","_id":"cil3a2tmh00075w2rpvgg9yqn"},{"name":"React Native","_id":"cimmuljte0001nsc5qtssdhso"}],"Data":[],"Page":[{"title":"tags","date":"2016-02-01T07:42:37.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2016-02-01 15:42:37\ntype: \"tags\"\n---\n","updated":"2016-02-01T07:43:21.000Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cil3a2tlw00035w2r2ukpx5d9"},{"title":"categories","date":"2016-02-01T07:48:22.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2016-02-01 15:48:22\ntype: \"categories\"\ncomments: false\n---\n","updated":"2016-02-03T10:13:10.000Z","path":"categories/index.html","layout":"page","_id":"cil3a2tly00045w2r6474e7a5"},{"title":"about","date":"2016-02-15T09:29:57.000Z","comments":0,"_content":"\n<body>\n\t<div class=\"about-card\">\n\t\t<div class=\"about-main\">\n\t\t\t<img class=\"about-header\" src=\"http://7xq01t.com1.z0.glb.clouddn.com/tsusolo.com%2FqiniuIMG_0184.JPG\" />\n\t\t\t<h1>I'm 谢许峰</h1>\n\t\t\t<div class=\"about-line\"></div>\n\t\t\t<div class=\"about-info\">\n\t\t\t\t<div class=\"about-skill\">\n\t\t\t\t<h3>Skill</h3>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>iOS development</li>\n\t\t\t\t\t<li>Web development</li>\n\t\t\t\t\t<li>Server development</li>\n\t\t\t\t\t<li>UI design</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<div class=\"about-lag\">\n\t\t\t\t<h3>Languages</h3>\n\t\t\t\t<p>Objective-c, Swift, Node.js, JavaScript, HTML, CSS</p>\n\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div class=\"about-footer\">\n\t\t\t<p>Blog 基于 <a href=\"https://github.com/hexojs/hexo\" target=\"_blank\">Hexo</a> <a href=\"https://github.com/iissnan/hexo-theme-next\" target=\"_blank\">Next</a></p>\n\t\t</div>\n\t\t</div>\n\n\t\t\n\t</div>\n</body>","source":"about/index.md","raw":"---\ntitle: about\ndate: 2016-02-15 17:29:57\ncomments: false\n---\n\n<body>\n\t<div class=\"about-card\">\n\t\t<div class=\"about-main\">\n\t\t\t<img class=\"about-header\" src=\"http://7xq01t.com1.z0.glb.clouddn.com/tsusolo.com%2FqiniuIMG_0184.JPG\" />\n\t\t\t<h1>I'm 谢许峰</h1>\n\t\t\t<div class=\"about-line\"></div>\n\t\t\t<div class=\"about-info\">\n\t\t\t\t<div class=\"about-skill\">\n\t\t\t\t<h3>Skill</h3>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>iOS development</li>\n\t\t\t\t\t<li>Web development</li>\n\t\t\t\t\t<li>Server development</li>\n\t\t\t\t\t<li>UI design</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<div class=\"about-lag\">\n\t\t\t\t<h3>Languages</h3>\n\t\t\t\t<p>Objective-c, Swift, Node.js, JavaScript, HTML, CSS</p>\n\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div class=\"about-footer\">\n\t\t\t<p>Blog 基于 <a href=\"https://github.com/hexojs/hexo\" target=\"_blank\">Hexo</a> <a href=\"https://github.com/iissnan/hexo-theme-next\" target=\"_blank\">Next</a></p>\n\t\t</div>\n\t\t</div>\n\n\t\t\n\t</div>\n</body>","updated":"2016-02-16T03:43:58.000Z","path":"about/index.html","layout":"page","_id":"cil3a2tme00055w2rw7unxnvu"}],"Post":[{"title":"iOS-持久化存储技术选型","date":"2016-02-22T08:23:05.000Z","_content":"\niOS有一道经典的面试题：数据的持久化存储有哪些方式？\n标准答案：常见的持久化存储方法有NSUserDefaults、plist、归档存文件、sqlite、CoreData已经新兴的Realm\n这样的答案对付面试官应该是够了，而实际运用中，你真的能搞清这些技术面向的场景么？\n<!-- more -->\n\n---\n### 技术分类\n* 偏好设置\n偏好设置是最简单的归档方式，适合存储简单的配置条目。使用NSUserDefaults单例就可以存储一些可序列化的类，通过keyValue的方式写入和读取，偏好设置实际上是一个plist文件\n* plist文件、归档\nplist和归档都是将对象整体保存到文件内\niOS开发里，plist随处可见，它比较像是json的表格可视化文件，能够存储一些可序列化的类型，如下\n``` swift\nNSArray;\nNSMutableArray;\nNSDictionary;\nNSMutableDictionary;\nNSData;\nNSMutableData;\nNSString;\nNSMutableString;\nNSNumber;\nNSDate;\n```\n  归档能够将遵守`NSCoding`协议的对象整体打包保存到文件里，从文件里解档读出的对象也可直接使用\n* sqlite、CoreData、Realm\n这三类都属于数据库存储，除了能够将数据逐条保存下来，最大的优势就是能够查询。当然，这三类数据库都有着自己的学习曲线，每个都需要一定的时间去掌握\n\n### 需求及技术分析\n技术应当紧紧围绕需求，根据不同的用途选择最匹配的方式，很重要！！！（这波给几分🐵）\n简单举几例，来说明在实际项目中，各存储方式的应用场景\n* 偏好设置\n用户的设置：例如字体大小、音乐播放的码率之类的简单数据，APP是否是第一次登陆、版本号等程序需要的参数\n* plist文件、归档\n比如某商品推荐APP，需求希望缓存10个商品，避免网络加载时显示空白。最简便的方法就是将10个商品的模型放进数组，一次性打包成data保存到文件里，需要的时候直接解档就可以使用\n* sqlite、CoreData、Realm\n数据库最大的存储优势其实就在于查询，能想到最需要数据库本地存储，就是TODO List类的APP，需要存储各种事务安排，并且能够分类排序查询\n\n---\n### 真·干货 ------ [TTLite](https://github.com/TifaTsubasa/TTLite)\n在实际的iOS开发中，复杂的本地存储场景是非常少的。很多时候，业务逻辑根本还没有到达需要花大量时间去研究数据库的程度，那么什么样的思路能够满足常见的存储要求呢？\n**轻查询、重存储、易学习且使用方便**\n\n> #### 介绍\nTTLite基于SQLite存储，使用FDMB提供的事务进行数据操作，封装了大量的sql语句，将建表、插入、删除、查询等操作封装成更加面对对象的方法，可以直接操作模型对象，整存整取，方便使用\n\n---\n**数据库是软件开发里非常重要的一环，在时间允许的情况下，认真研究一门数据库还是非常重要的 ^.^**\n\n---\n**如果你也喜爱游戏，欢迎支持我的APP**  [Up 游戏专辑](https://itunes.apple.com/app/id986716705)\n![](http://7xq01t.com1.z0.glb.clouddn.com/2016-02-16-1444295065.png)\n","source":"_posts/iOS-持久化存储技术选型.md","raw":"---\ntitle: iOS-持久化存储技术选型\ndate: 2016-02-22 16:23:05\ncategories: iOS\npermalink: iOS-endorance-storage\n---\n\niOS有一道经典的面试题：数据的持久化存储有哪些方式？\n标准答案：常见的持久化存储方法有NSUserDefaults、plist、归档存文件、sqlite、CoreData已经新兴的Realm\n这样的答案对付面试官应该是够了，而实际运用中，你真的能搞清这些技术面向的场景么？\n<!-- more -->\n\n---\n### 技术分类\n* 偏好设置\n偏好设置是最简单的归档方式，适合存储简单的配置条目。使用NSUserDefaults单例就可以存储一些可序列化的类，通过keyValue的方式写入和读取，偏好设置实际上是一个plist文件\n* plist文件、归档\nplist和归档都是将对象整体保存到文件内\niOS开发里，plist随处可见，它比较像是json的表格可视化文件，能够存储一些可序列化的类型，如下\n``` swift\nNSArray;\nNSMutableArray;\nNSDictionary;\nNSMutableDictionary;\nNSData;\nNSMutableData;\nNSString;\nNSMutableString;\nNSNumber;\nNSDate;\n```\n  归档能够将遵守`NSCoding`协议的对象整体打包保存到文件里，从文件里解档读出的对象也可直接使用\n* sqlite、CoreData、Realm\n这三类都属于数据库存储，除了能够将数据逐条保存下来，最大的优势就是能够查询。当然，这三类数据库都有着自己的学习曲线，每个都需要一定的时间去掌握\n\n### 需求及技术分析\n技术应当紧紧围绕需求，根据不同的用途选择最匹配的方式，很重要！！！（这波给几分🐵）\n简单举几例，来说明在实际项目中，各存储方式的应用场景\n* 偏好设置\n用户的设置：例如字体大小、音乐播放的码率之类的简单数据，APP是否是第一次登陆、版本号等程序需要的参数\n* plist文件、归档\n比如某商品推荐APP，需求希望缓存10个商品，避免网络加载时显示空白。最简便的方法就是将10个商品的模型放进数组，一次性打包成data保存到文件里，需要的时候直接解档就可以使用\n* sqlite、CoreData、Realm\n数据库最大的存储优势其实就在于查询，能想到最需要数据库本地存储，就是TODO List类的APP，需要存储各种事务安排，并且能够分类排序查询\n\n---\n### 真·干货 ------ [TTLite](https://github.com/TifaTsubasa/TTLite)\n在实际的iOS开发中，复杂的本地存储场景是非常少的。很多时候，业务逻辑根本还没有到达需要花大量时间去研究数据库的程度，那么什么样的思路能够满足常见的存储要求呢？\n**轻查询、重存储、易学习且使用方便**\n\n> #### 介绍\nTTLite基于SQLite存储，使用FDMB提供的事务进行数据操作，封装了大量的sql语句，将建表、插入、删除、查询等操作封装成更加面对对象的方法，可以直接操作模型对象，整存整取，方便使用\n\n---\n**数据库是软件开发里非常重要的一环，在时间允许的情况下，认真研究一门数据库还是非常重要的 ^.^**\n\n---\n**如果你也喜爱游戏，欢迎支持我的APP**  [Up 游戏专辑](https://itunes.apple.com/app/id986716705)\n![](http://7xq01t.com1.z0.glb.clouddn.com/2016-02-16-1444295065.png)\n","slug":"iOS-endorance-storage","published":1,"updated":"2016-02-26T05:12:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cil3a2tkr00005w2rpksp4drn"},{"layout":"design","title":"自定义navigation controller过渡动画","date":"2016-02-01T07:51:04.000Z","_content":"\n除了导航控制器自带的左右滑动的过渡动画，如何去自定义一个特殊的导航过渡效果呢\n[源码见Github](https://github.com/TifaTsubasa/SwiftTransitionExample)\n\n* 1.较流行的缩放过渡，不少APP都在采用这种方式，比如豌豆荚的一览，iOS9新加的APP之间的切换，这里推荐一下朋友的[LCNavigationController](https://github.com/LeoiOS/LCNavigationController)，想偷个懒的话可以尝试一下\n\n![](http://7xq01t.com1.z0.glb.clouddn.com/transition1.gif)\n<!-- more -->\n* 2.元素重用的过渡方式\n我习惯将这种将view过渡到下一页的方式称\n为元素重用，这里的演示效果来自于[PeteC/InteractiveViewControllerTransitions](https://github.com/PeteC/InteractiveViewControllerTransitions)，[下一章](http://tsusolo.com/2016/02/18/custom_navigation_transition_2.html)会用swift重写这个项目\n\n![](http://7xq01t.com1.z0.glb.clouddn.com/tsusolo.com/qiniutransition2.gif)\n\n### 设计思路\n缩放过渡的思路其实非常简单，在push/pop过程中，设置上一层控制器view的scale就营造出下沉的效果，重点是\n\n**如何控制导航过渡的过程**\n\n### 步骤\n#### 1.初始化控制器\n\n``` swift\nTTScaleNavigationController.swift // 继承UINavigationController用来重写导航的动画设置\nTTScaleFirstController.swift\t// 导航的前一页控制器\nTTScaleSecondController.swift\t// 导航的后一页控制器\n```\n首先需要初始化一个导航控制器和两个ViewController做基本的push/pop，当然，只有默认的左右滑动的效果😁\n\n#### 2.设置过渡动画\n**在什么地方控制转场的过程，如何修改转场动画呢?**\n\n这里就要用到iOS7新增的API，苹果提供的自定义转场动画的协议`UIViewControllerAnimatedTransitioning`，负责管理在转场切换过程发生的事件\n\n**以自定义push转场为例：**\n\n##### 1. 创建过场动画的接口类\n首先我们需要一个继承于`NSObject`，遵守`UIViewControllerAnimatedTransitioning`协议的类\n``` swift\nclass TTPushTransition: NSObject, UIViewControllerAnimatedTransitioning {\n\n}\n```\n\n##### 2. 设置过场时间\n在`TTPushTransition`中使用协议中的方法设置过场时间为1s(正常的过场时间大约为0.3s，1s用于测试)\n``` swift\nfunc transitionDuration(transitionContext: UIViewControllerContextTransitioning?) -> NSTimeInterval {\n    return 1\n}\n```\n##### 3. 设置push过场动画\n首先我们需要理清一下过场动画的流程：\n\n* 我们将导航的前一页控制器称为fromVc，下一页控制称为toVc\n  在push过程中，TTScaleFirstController是fromVc，TTScaleSecondController是toVc\n  在pop过程中则反过来，TTScaleSecondController是fromVc，TTScaleFirstController是toVc\n![](http://7xq01t.com1.z0.glb.clouddn.com/tsusolo.com%2Fqiniufrom%26to.png)\n* 在导航push过程中，将fromVc视图的scale从1设置到0.7，将toVc视图的frame从屏幕右方移动到屏幕中间\n\n过场的动画，需要在`UIViewControllerAnimatedTransitioning`提供的\n\n``` swift\npublic func animateTransition(transitionContext: UIViewControllerContextTransitioning)\n```\n方法内实现，方法中的过场上下文`transitionContext`，会提供设置动画的所需的各个对象\n``` swift\n// 使用对应key取得相应控制器\nlet fromVc = transitionContext.viewControllerForKey(UITransitionContextFromViewControllerKey)\nlet toVc = transitionContext.viewControllerForKey(UITransitionContextToViewControllerKey)\n\nlet duration = self.transitionDuration(transitionContext)\t// 根据另一协议方法获得过场时间\nlet containerView = transitionContext.containerView()\t// 过场容器视图\n```\n过场上下文提供了一个容器视图`containerView`，在过场过程中，这个视图就相当一个舞台，fromVc和toVc的View可以在容器内做各种动画，首先我们需要准备一下舞台\n``` swift\ncontainerView?.addSubview(toVc!.view)\t// 默认fromVc的视图已经加入容器内\nlet screenW = UIScreen.mainScreen().bounds.width\nlet screenH = UIScreen.mainScreen().bounds.height\ntoVc?.view.frame = CGRectMake(screenW, 0, screenW, screenH)\n```\n设置好toVc的视图位置后，就开始正式的动画设置了\n``` swift\nUIView.animateWithDuration(duration, animations: { () -> Void in\n    fromVc?.view.transform = CGAffineTransformMakeScale(0.7, 0.7) // fromVc视图的scale设置到0.7\n    toVc?.view.frame = CGRectMake(0, 0, screenW, screenH)\t// toVc视图从屏幕右方移动到屏幕中间\n    }) { (_) -> Void in\n        transitionContext.completeTransition(!transitionContext.transitionWasCancelled())\n\t}\n```\n需要注意的是，在动画结束时，必须调用`transitionContext.completeTransition(!transitionContext.transitionWasCancelled())`来清理舞台，如果传入一个`true`好像也没有问题，但是在加入右划返回手势，滑动一半取消时，就会出现问题，因此需要根据过场是否被取消来正确清理过场上下文\n##### 4. 更改导航的方式\n完成上面三步，我们就写好了过场的剧本，接下来就得请演员`TTScaleNavigationController`上台表演了\n``` swift\nimport UIKit\n\nclass TTScaleNavigationController: UINavigationController, UINavigationControllerDelegate {\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        self.delegate = self\n    }\n\n    func navigationController(navigationController: UINavigationController, animationControllerForOperation operation: UINavigationControllerOperation, fromViewController fromVC: UIViewController, toViewController toVC: UIViewController) -> UIViewControllerAnimatedTransitioning? {\n        if (operation == .Push) {\n            return TTPushTransition()\n        }\n\t\treturn nil\n    }\n}\n```\n在UINavigationControllerDelegate的方法中，设置push状态的过场是写好的\"剧本\"，编译运行一次，push的动画已经像模像样了，不过好像只会生效一次o(╯□╰)o，需要完善pop的动画\n##### 5. 设置pop的动画\n设置pop动画的流程跟push类似，也需要新建一个遵守`UIViewControllerAnimatedTransitioning`的NSObject类，唯一不同的是设置动画，但实际上也就是push动画的逆向，这里就直接贴上代码了\n``` swift\nimport UIKit\n\nclass TTPopTransition: NSObject, UIViewControllerAnimatedTransitioning {\n    func transitionDuration(transitionContext: UIViewControllerContextTransitioning?) -> NSTimeInterval {\n        return 1\n    }\n\n    func animateTransition(transitionContext: UIViewControllerContextTransitioning) {\n        let containerView = transitionContext.containerView()\n        let fromVc = transitionContext.viewControllerForKey(UITransitionContextFromViewControllerKey)\n        let toVc = transitionContext.viewControllerForKey(UITransitionContextToViewControllerKey)\n\n        let duration = self.transitionDuration(transitionContext)\n        let screenW = UIScreen.mainScreen().bounds.width\n        let screenH = UIScreen.mainScreen().bounds.height\n\n        containerView?.addSubview(toVc!.view)\n        containerView?.sendSubviewToBack(toVc!.view)\n        UIView.animateWithDuration(duration, animations: { () -> Void in\n            fromVc?.view.frame = CGRectMake(screenW, 0, screenW, screenH)\n            toVc?.view.transform = CGAffineTransformMakeScale(1, 1)\n            }) { (_) -> Void in\n                transitionContext.completeTransition(!transitionContext.transitionWasCancelled())\n        }\n    }\n}\n```\n\n然后完善一下`TTScaleNavigationController`的协议方法，补充pop状态需要的过场\n``` swift\nfunc navigationController(navigationController: UINavigationController, animationControllerForOperation operation: UINavigationControllerOperation, fromViewController fromVC: UIViewController, toViewController toVC: UIViewController) -> UIViewControllerAnimatedTransitioning? {\n    if (operation == .Push) {\n        return TTPushTransition()\n    } else if operation == .Pop {\n        return TTPopTransition()\n    }\n    return nil\n}\n```\n再次运行项目，导航的过场已经基本完善了，已经拥有了想象动画，但是！！！\n\n##### 6. 右划返回手势\n重写了导航控制器之后，右划手势就失效了，需要手动添加手势😔\n\n回到`TTScaleNavigationController`中，手势需要一个新的对象来记录手势状态，并且这个对象最终会通知导航进行相应操作，添加\n``` swift\nvar interactivePopTransition: UIPercentDrivenInteractiveTransition?\n```\n然后在`viewDidLoad`方法中添加边缘手势\n``` swift\nlet popRecognizer = UIScreenEdgePanGestureRecognizer(target: self, action: \"handlePopRecognizer:\")\npopRecognizer.edges = .Left;\nself.view.addGestureRecognizer(popRecognizer)\n```\n记得补充手势的响应方法，这里使用了Swift的`switch`特性来判断状态并记录状态\n``` swift\nfunc handlePopRecognizer(recognizer: UIScreenEdgePanGestureRecognizer) {\n    // 获取手势在屏幕横屏范围的滑动百分比，并控制在0.0 - 1.0之间\n    var progress = recognizer.translationInView(self.view).x / self.view.bounds.width\n    progress = min(1.0, max(0.0, progress))\n\n    switch recognizer.state {\n    case .Began:    // 开始滑动：初始化UIPercentDrivenInteractiveTransition对象，并开启导航pop\n        interactivePopTransition = UIPercentDrivenInteractiveTransition()\n        self.popViewControllerAnimated(true)\n    case .Changed:  // 滑动过程中，根据在屏幕上滑动的百分比更新状态\n        interactivePopTransition?.updateInteractiveTransition(progress)\n    case .Ended, .Cancelled:    // 滑动结束或取消时，判断手指位置，在左半屏幕取消pop，在右半屏幕完成pop过程\n        if progress > 0.5 {\n            interactivePopTransition?.finishInteractiveTransition()\n        } else {\n            interactivePopTransition?.cancelInteractiveTransition()\n        }\n        interactivePopTransition = nil\n    default: break\n    }\n}\n```\n最后，还要把我们记录下来的`UIPercentDrivenInteractiveTransition`对象通知给导航控制器\n``` swift\nfunc navigationController(navigationController: UINavigationController, interactionControllerForAnimationController animationController: UIViewControllerAnimatedTransitioning) -> UIViewControllerInteractiveTransitioning? {\n    return interactivePopTransition\n}\n```\n终于，一个自定义过场方式的导航控制器就完活儿了😉\n\n### 优化\n##### 1. 添加阴影\n为toVc的视图添加左侧的阴影，提高两个视图的层次感\n![](http://gamecd.com.cn/images/swift-transition/transition-shadow.png)\n在`TTPushTransition`的动画设置方法中，添加\n``` swift\n// shadows\ntoVc?.view.layer.shadowOffset = CGSizeMake(-3, 0);\ntoVc?.view.layer.shadowColor = UIColor.blackColor().colorWithAlphaComponent(0.3).CGColor\ntoVc?.view.layer.shadowOpacity = 1\n```\n\n##### 2. 渐亮渐暗效果\n为fromVc提供push渐暗，pop渐亮的效果\n\n思路是在fromVc和toVc的视图中间，插入一层黑色的view，并调节这一view的透明度，在`TTPushTransition`的动画设置方法中，在动画开始前插入蒙版视图\n``` swift\nlet blackView = UIView(frame: CGRectMake(0, 0, screenW, screenH))\nblackView.backgroundColor = UIColor.blackColor()\nblackView.alpha = 0\ncontainerView?.insertSubview(blackView, belowSubview: toVc!.view)\n```\n在动画中，设置`blackView.alpha = 0.7`并在动画结束时`blackView.removeFromSuperview()`\npop过程自然就是一个相反的过程了，同样插入一个蒙版透明度从0.7到0\n\n##### 3. 优化参数\n记得修改动画时间到0.3，fromVc视图的scale为0.95 😜\n\n---\n\n**如果你也喜爱游戏，欢迎支持我的APP**  [Up 游戏专辑](https://itunes.apple.com/app/id986716705)\n![](http://7xq01t.com1.z0.glb.clouddn.com/2016-02-16-1444295065.png)\n","source":"_posts/自定义navigation controller过渡动画.md","raw":"layout: design\ntitle: 自定义navigation controller过渡动画\ndate: 2016-02-01 15:51:04\ncategories: Swift过渡指南\npermalink: custom_navigation_transition\n---\n\n除了导航控制器自带的左右滑动的过渡动画，如何去自定义一个特殊的导航过渡效果呢\n[源码见Github](https://github.com/TifaTsubasa/SwiftTransitionExample)\n\n* 1.较流行的缩放过渡，不少APP都在采用这种方式，比如豌豆荚的一览，iOS9新加的APP之间的切换，这里推荐一下朋友的[LCNavigationController](https://github.com/LeoiOS/LCNavigationController)，想偷个懒的话可以尝试一下\n\n![](http://7xq01t.com1.z0.glb.clouddn.com/transition1.gif)\n<!-- more -->\n* 2.元素重用的过渡方式\n我习惯将这种将view过渡到下一页的方式称\n为元素重用，这里的演示效果来自于[PeteC/InteractiveViewControllerTransitions](https://github.com/PeteC/InteractiveViewControllerTransitions)，[下一章](http://tsusolo.com/2016/02/18/custom_navigation_transition_2.html)会用swift重写这个项目\n\n![](http://7xq01t.com1.z0.glb.clouddn.com/tsusolo.com/qiniutransition2.gif)\n\n### 设计思路\n缩放过渡的思路其实非常简单，在push/pop过程中，设置上一层控制器view的scale就营造出下沉的效果，重点是\n\n**如何控制导航过渡的过程**\n\n### 步骤\n#### 1.初始化控制器\n\n``` swift\nTTScaleNavigationController.swift // 继承UINavigationController用来重写导航的动画设置\nTTScaleFirstController.swift\t// 导航的前一页控制器\nTTScaleSecondController.swift\t// 导航的后一页控制器\n```\n首先需要初始化一个导航控制器和两个ViewController做基本的push/pop，当然，只有默认的左右滑动的效果😁\n\n#### 2.设置过渡动画\n**在什么地方控制转场的过程，如何修改转场动画呢?**\n\n这里就要用到iOS7新增的API，苹果提供的自定义转场动画的协议`UIViewControllerAnimatedTransitioning`，负责管理在转场切换过程发生的事件\n\n**以自定义push转场为例：**\n\n##### 1. 创建过场动画的接口类\n首先我们需要一个继承于`NSObject`，遵守`UIViewControllerAnimatedTransitioning`协议的类\n``` swift\nclass TTPushTransition: NSObject, UIViewControllerAnimatedTransitioning {\n\n}\n```\n\n##### 2. 设置过场时间\n在`TTPushTransition`中使用协议中的方法设置过场时间为1s(正常的过场时间大约为0.3s，1s用于测试)\n``` swift\nfunc transitionDuration(transitionContext: UIViewControllerContextTransitioning?) -> NSTimeInterval {\n    return 1\n}\n```\n##### 3. 设置push过场动画\n首先我们需要理清一下过场动画的流程：\n\n* 我们将导航的前一页控制器称为fromVc，下一页控制称为toVc\n  在push过程中，TTScaleFirstController是fromVc，TTScaleSecondController是toVc\n  在pop过程中则反过来，TTScaleSecondController是fromVc，TTScaleFirstController是toVc\n![](http://7xq01t.com1.z0.glb.clouddn.com/tsusolo.com%2Fqiniufrom%26to.png)\n* 在导航push过程中，将fromVc视图的scale从1设置到0.7，将toVc视图的frame从屏幕右方移动到屏幕中间\n\n过场的动画，需要在`UIViewControllerAnimatedTransitioning`提供的\n\n``` swift\npublic func animateTransition(transitionContext: UIViewControllerContextTransitioning)\n```\n方法内实现，方法中的过场上下文`transitionContext`，会提供设置动画的所需的各个对象\n``` swift\n// 使用对应key取得相应控制器\nlet fromVc = transitionContext.viewControllerForKey(UITransitionContextFromViewControllerKey)\nlet toVc = transitionContext.viewControllerForKey(UITransitionContextToViewControllerKey)\n\nlet duration = self.transitionDuration(transitionContext)\t// 根据另一协议方法获得过场时间\nlet containerView = transitionContext.containerView()\t// 过场容器视图\n```\n过场上下文提供了一个容器视图`containerView`，在过场过程中，这个视图就相当一个舞台，fromVc和toVc的View可以在容器内做各种动画，首先我们需要准备一下舞台\n``` swift\ncontainerView?.addSubview(toVc!.view)\t// 默认fromVc的视图已经加入容器内\nlet screenW = UIScreen.mainScreen().bounds.width\nlet screenH = UIScreen.mainScreen().bounds.height\ntoVc?.view.frame = CGRectMake(screenW, 0, screenW, screenH)\n```\n设置好toVc的视图位置后，就开始正式的动画设置了\n``` swift\nUIView.animateWithDuration(duration, animations: { () -> Void in\n    fromVc?.view.transform = CGAffineTransformMakeScale(0.7, 0.7) // fromVc视图的scale设置到0.7\n    toVc?.view.frame = CGRectMake(0, 0, screenW, screenH)\t// toVc视图从屏幕右方移动到屏幕中间\n    }) { (_) -> Void in\n        transitionContext.completeTransition(!transitionContext.transitionWasCancelled())\n\t}\n```\n需要注意的是，在动画结束时，必须调用`transitionContext.completeTransition(!transitionContext.transitionWasCancelled())`来清理舞台，如果传入一个`true`好像也没有问题，但是在加入右划返回手势，滑动一半取消时，就会出现问题，因此需要根据过场是否被取消来正确清理过场上下文\n##### 4. 更改导航的方式\n完成上面三步，我们就写好了过场的剧本，接下来就得请演员`TTScaleNavigationController`上台表演了\n``` swift\nimport UIKit\n\nclass TTScaleNavigationController: UINavigationController, UINavigationControllerDelegate {\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        self.delegate = self\n    }\n\n    func navigationController(navigationController: UINavigationController, animationControllerForOperation operation: UINavigationControllerOperation, fromViewController fromVC: UIViewController, toViewController toVC: UIViewController) -> UIViewControllerAnimatedTransitioning? {\n        if (operation == .Push) {\n            return TTPushTransition()\n        }\n\t\treturn nil\n    }\n}\n```\n在UINavigationControllerDelegate的方法中，设置push状态的过场是写好的\"剧本\"，编译运行一次，push的动画已经像模像样了，不过好像只会生效一次o(╯□╰)o，需要完善pop的动画\n##### 5. 设置pop的动画\n设置pop动画的流程跟push类似，也需要新建一个遵守`UIViewControllerAnimatedTransitioning`的NSObject类，唯一不同的是设置动画，但实际上也就是push动画的逆向，这里就直接贴上代码了\n``` swift\nimport UIKit\n\nclass TTPopTransition: NSObject, UIViewControllerAnimatedTransitioning {\n    func transitionDuration(transitionContext: UIViewControllerContextTransitioning?) -> NSTimeInterval {\n        return 1\n    }\n\n    func animateTransition(transitionContext: UIViewControllerContextTransitioning) {\n        let containerView = transitionContext.containerView()\n        let fromVc = transitionContext.viewControllerForKey(UITransitionContextFromViewControllerKey)\n        let toVc = transitionContext.viewControllerForKey(UITransitionContextToViewControllerKey)\n\n        let duration = self.transitionDuration(transitionContext)\n        let screenW = UIScreen.mainScreen().bounds.width\n        let screenH = UIScreen.mainScreen().bounds.height\n\n        containerView?.addSubview(toVc!.view)\n        containerView?.sendSubviewToBack(toVc!.view)\n        UIView.animateWithDuration(duration, animations: { () -> Void in\n            fromVc?.view.frame = CGRectMake(screenW, 0, screenW, screenH)\n            toVc?.view.transform = CGAffineTransformMakeScale(1, 1)\n            }) { (_) -> Void in\n                transitionContext.completeTransition(!transitionContext.transitionWasCancelled())\n        }\n    }\n}\n```\n\n然后完善一下`TTScaleNavigationController`的协议方法，补充pop状态需要的过场\n``` swift\nfunc navigationController(navigationController: UINavigationController, animationControllerForOperation operation: UINavigationControllerOperation, fromViewController fromVC: UIViewController, toViewController toVC: UIViewController) -> UIViewControllerAnimatedTransitioning? {\n    if (operation == .Push) {\n        return TTPushTransition()\n    } else if operation == .Pop {\n        return TTPopTransition()\n    }\n    return nil\n}\n```\n再次运行项目，导航的过场已经基本完善了，已经拥有了想象动画，但是！！！\n\n##### 6. 右划返回手势\n重写了导航控制器之后，右划手势就失效了，需要手动添加手势😔\n\n回到`TTScaleNavigationController`中，手势需要一个新的对象来记录手势状态，并且这个对象最终会通知导航进行相应操作，添加\n``` swift\nvar interactivePopTransition: UIPercentDrivenInteractiveTransition?\n```\n然后在`viewDidLoad`方法中添加边缘手势\n``` swift\nlet popRecognizer = UIScreenEdgePanGestureRecognizer(target: self, action: \"handlePopRecognizer:\")\npopRecognizer.edges = .Left;\nself.view.addGestureRecognizer(popRecognizer)\n```\n记得补充手势的响应方法，这里使用了Swift的`switch`特性来判断状态并记录状态\n``` swift\nfunc handlePopRecognizer(recognizer: UIScreenEdgePanGestureRecognizer) {\n    // 获取手势在屏幕横屏范围的滑动百分比，并控制在0.0 - 1.0之间\n    var progress = recognizer.translationInView(self.view).x / self.view.bounds.width\n    progress = min(1.0, max(0.0, progress))\n\n    switch recognizer.state {\n    case .Began:    // 开始滑动：初始化UIPercentDrivenInteractiveTransition对象，并开启导航pop\n        interactivePopTransition = UIPercentDrivenInteractiveTransition()\n        self.popViewControllerAnimated(true)\n    case .Changed:  // 滑动过程中，根据在屏幕上滑动的百分比更新状态\n        interactivePopTransition?.updateInteractiveTransition(progress)\n    case .Ended, .Cancelled:    // 滑动结束或取消时，判断手指位置，在左半屏幕取消pop，在右半屏幕完成pop过程\n        if progress > 0.5 {\n            interactivePopTransition?.finishInteractiveTransition()\n        } else {\n            interactivePopTransition?.cancelInteractiveTransition()\n        }\n        interactivePopTransition = nil\n    default: break\n    }\n}\n```\n最后，还要把我们记录下来的`UIPercentDrivenInteractiveTransition`对象通知给导航控制器\n``` swift\nfunc navigationController(navigationController: UINavigationController, interactionControllerForAnimationController animationController: UIViewControllerAnimatedTransitioning) -> UIViewControllerInteractiveTransitioning? {\n    return interactivePopTransition\n}\n```\n终于，一个自定义过场方式的导航控制器就完活儿了😉\n\n### 优化\n##### 1. 添加阴影\n为toVc的视图添加左侧的阴影，提高两个视图的层次感\n![](http://gamecd.com.cn/images/swift-transition/transition-shadow.png)\n在`TTPushTransition`的动画设置方法中，添加\n``` swift\n// shadows\ntoVc?.view.layer.shadowOffset = CGSizeMake(-3, 0);\ntoVc?.view.layer.shadowColor = UIColor.blackColor().colorWithAlphaComponent(0.3).CGColor\ntoVc?.view.layer.shadowOpacity = 1\n```\n\n##### 2. 渐亮渐暗效果\n为fromVc提供push渐暗，pop渐亮的效果\n\n思路是在fromVc和toVc的视图中间，插入一层黑色的view，并调节这一view的透明度，在`TTPushTransition`的动画设置方法中，在动画开始前插入蒙版视图\n``` swift\nlet blackView = UIView(frame: CGRectMake(0, 0, screenW, screenH))\nblackView.backgroundColor = UIColor.blackColor()\nblackView.alpha = 0\ncontainerView?.insertSubview(blackView, belowSubview: toVc!.view)\n```\n在动画中，设置`blackView.alpha = 0.7`并在动画结束时`blackView.removeFromSuperview()`\npop过程自然就是一个相反的过程了，同样插入一个蒙版透明度从0.7到0\n\n##### 3. 优化参数\n记得修改动画时间到0.3，fromVc视图的scale为0.95 😜\n\n---\n\n**如果你也喜爱游戏，欢迎支持我的APP**  [Up 游戏专辑](https://itunes.apple.com/app/id986716705)\n![](http://7xq01t.com1.z0.glb.clouddn.com/2016-02-16-1444295065.png)\n","slug":"custom_navigation_transition","published":1,"updated":"2016-02-26T05:19:36.000Z","comments":1,"photos":[],"link":"","_id":"cil3a2tmg00065w2rwi4x56s4"},{"title":"自定义navigation controller过渡动画 2","date":"2016-02-18T07:33:04.000Z","_content":"\n来自于[PeteC/InteractiveViewControllerTransitions](https://github.com/PeteC/InteractiveViewControllerTransitions)的定制过渡效果，这是个人非常喜欢的一种动画方式，习惯于成为**元素重用**，本章将要用Swift重写这个项目，掌握针对于页面的过渡动画，让自己的APP更具个性化。\n\n[源码见Github](https://github.com/TifaTsubasa/SwiftTransitionExample)\n\n![](http://7xq01t.com1.z0.glb.clouddn.com/tsusolo.com%2Fqiniutransition2.gif)\n<!-- more -->\n页面定制化的过渡方式同样依赖于`UIViewControllerAnimatedTransitioning`, 如果还不是很了解，可以复习一下[自定义navigation controller过渡动画](http://tsusolo.com/2016/02/18/custom_navigation_transition.html)\n\n---\n### 设计思路\n* 整个过渡动画的核心在于图片的移动，看上去是将tableViewCell上的图片移动到下一页控制器的view上，实际上我们会拷贝一份imageView从cell的位置移动到视图中心\n* 动画的其他部分无非与设置各个view的透明度\n\n### 步骤\n#### 1.初始化项目\n* 两层控制器\n* 相应的视图和模型\n* push和pop动画接口\n* 资源文件，详见[源码](https://github.com/TifaTsubasa/SwiftTransitionExample)\n![](http://7xq01t.com1.z0.glb.clouddn.com/tsusolo.com%2Fqiniucustom-transition-finder.png)\n* 控制器的初始化\n![](http://7xq01t.com1.z0.glb.clouddn.com/custom-transition-page1.png)\n![](http://7xq01t.com1.z0.glb.clouddn.com/custom-transition-page2.png)\n初始化的过程比较重复，copy相应的代码就好\n> Swift Tip:\n有一段初始化数据的代码比较有意思，可以感受一下\n这里用到了`lazy`关键字进行懒加载，避免了oc里的判断。在赋值的右边，用到了一个匿名函数，并且紧接括号执行返回数组，比较类似于JavaScript的匿名立即执行函数\n``` swift\n    lazy var things: [TTThing] = {\n        let arr = []  // 通过字面量设置数组\n        return arr\n    }()\n```\n\n\n\n#### 2.设置过渡动画\n上一章已经详细说明过渡动画的设置方式，这里就直接进入核心部分----**动画效果的处理**\n##### 1.过场时间设置\n依旧以push过场为例，在新建的`TTCustomPushAnimation.swift`文件内，首先实现\n``` swift\nfunc transitionDuration(transitionContext: UIViewControllerContextTransitioning?) -> NSTimeInterval {\n    return 1\n}\n```\n设置过场时间为1s，1秒的速度方便调试\n\n##### 2.view获取\n然后来到动画大剧场\n``` swift\nfunc animateTransition(transitionContext: UIViewControllerContextTransitioning)\n```\n在`animateTransition`内中设置\n取得动画所需view\n``` swift\nlet containerView = transitionContext.containerView()\nlet fromVc = transitionContext.viewControllerForKey(UITransitionContextFromViewControllerKey) as! TTCustomFromController\nlet toVc = transitionContext.viewControllerForKey(UITransitionContextToViewControllerKey) as! TTCustomToController\nlet cell = fromVc.collection.cellForItemAtIndexPath((fromVc.collection.indexPathsForSelectedItems()?.first)!) as! TTThingCell\nlet snapImageView = cell.imgView.snapshotViewAfterScreenUpdates(false)\n```\n除了过场必要的containerView、fromVc、toVc之外，我们还要通过collection取得点击的cell，并将这个cell上的ImageView拷贝成`snapImageView`备用\n\n  > Swift Tip:\n这里在取得fromVc、toVc、cell时都用到了`as!`进行强制类型转换，加上感叹号避免在之后调用中的可选解析\n，但是在逻辑上就需要保证相应类型的正确，后面的代码会做相应类型保护\n\n##### 3.过场参数设置\n除了必要的动画时间,还需要获得`snapImageView`在动画中的起始frame和终止frame(frame同时影响位置和大小)\n``` swift\nlet duration = self.transitionDuration(transitionContext)\nlet startFrame = cell.imgView.superview!.convertRect(cell.imgView.frame, toView: containerView)\nlet finalFrame = toVc.view.convertRect(toVc.imgView.frame, toView: containerView)\n```\n记得动画舞台`containerView`么，`snapImageView`会在整个过场中置于其中进行动画操作，所以我们使用`convertRect`将Cell上imageView的frame转换到containerView作为起始frame，将toVc上imageView转换到containerView作为终止frame\n![](http://7xq01t.com1.z0.glb.clouddn.com/animation-demo.png)\n\n##### 4.动画初始化\n获得所有动画所需的属性后，接下来就是动画的准备活动了\n1.将toVc的视图和snapImageView添加到containerView上\n2.将snapImageView的frame设置到起始frame，以覆盖Cell上的imageView，并将Cell的imageView隐藏\n3.将toVc的视图透明度设置为0，并隐藏toVc上的imageView\n``` swift\ncontainerView?.addSubview(toVc.view)\ncontainerView?.addSubview(snapImageView)\n\nsnapImageView.frame = startFrame\ncell.imgView.hidden = true\ntoVc.view.alpha = 0\ntoVc.imgView.hidden = true\n```\n\n##### 5.动画设置\n在整个动画中只有2个流程\n1.让toVc的视图逐渐显示出来\n2.将snapImageView移动到终止frame\n``` swift\nUIView.animateWithDuration(duration, animations: { () -> Void in\n    toVc.view.alpha = 1\n    snapImageView.frame = finalFrame\n    }) { (finished) -> Void in\n        toVc.imgView.hidden = false\n        cell.imgView.hidden = false\n        snapImageView.removeFromSuperview()\n        transitionContext.completeTransition(!transitionContext.transitionWasCancelled())\n}\n```\n动画结束之后，记得收场哦\n1.移除snapImageView，并将toVc上的imageView显示出来\n2.将cell上的imageView恢复显示\n3.清除过场\n\n#### 3.设置push控制器\n老规矩，上述操作写好了剧本，得让演员上台表演了。由于这里是定制的过场动画，并不能重写导航去影响所有的过场，所以需要指定的演员`TTCustomFirstController`\n在TTCustomFirstController中，添加`UINavigationControllerDelegate`，显示控制器时添加代码，不显示时移除\n``` swift\noverride func viewWillAppear(animated: Bool) {\n    super.viewWillAppear(animated)\n    self.navigationController?.delegate = self\n}\n\noverride func viewWillDisappear(animated: Bool) {\n    super.viewWillDisappear(animated)\n    if let _ = self.navigationController?.delegate {\n        self.navigationController?.delegate = nil\n    }\n}\n```\n\n然后声明此控制器的过场方式\n``` swift\nfunc navigationController(navigationController: UINavigationController, animationControllerForOperation operation: UINavigationControllerOperation, fromViewController fromVC: UIViewController, toViewController toVC: UIViewController) -> UIViewControllerAnimatedTransitioning? {\n    if fromVC == self && toVC is TTCustomSecondController {\n        return TTCustomPushAnimation()\n    }\n    return nil\n}\n```\n在导航的代理方法中，我们返回了自定义的过场动画接口，并对fromVc和toVc都做了类型判断，还记得我们在上面用到的`as!`强制类型转换么，这里的判断能保证类型的正确使用\n重启程序，push的过场已经和预期的是一样的了 ☺️\n\n#### 4.设置pop动画\npush动画已经设置完毕，pop动画依旧是push的逆向过程\n##### 1.初始化pop过场动画\n新建`TTCustomPopAnimation`，实现UIViewControllerAnimatedTransitioning的两个方法，这里直接贴出pop动画的设置代码\n**依旧需要注意的是fromVc和toVc对应的控制器**\n``` swift\nfunc animateTransition(transitionContext: UIViewControllerContextTransitioning) {\n    let containerView = transitionContext.containerView()\n    let fromVc = transitionContext.viewControllerForKey(UITransitionContextFromViewControllerKey) as! TTCustomSecondController\n    let toVc = transitionContext.viewControllerForKey(UITransitionContextToViewControllerKey) as! TTCustomFirstController\n    let selectedCell = toVc.collection.cellForItemAtIndexPath(toVc.selectedIndex!) as! TTThingCell\n    let snapImgView = fromVc.imgView.snapshotViewAfterScreenUpdates(false)\n\n    let duration = self.transitionDuration(transitionContext)\n    let startFrame = fromVc.view.convertRect(fromVc.imgView.frame, toView: containerView)\n    let finalFrame = selectedCell.imgView.convertRect(selectedCell.imgView.frame, toView: containerView)\n\n    snapImgView.frame = startFrame\n    fromVc.imgView.hidden = true\n    toVc.view.alpha = 0\n\n    containerView?.insertSubview(toVc.view, belowSubview: fromVc.view)\n    containerView?.addSubview(snapImgView)\n\n    UIView.animateWithDuration(duration, animations: { () -> Void in\n        toVc.view.alpha = 1\n        fromVc.view.alpha = 0\n        snapImgView.frame = finalFrame\n        }) { (finished) -> Void in\n            fromVc.imgView.hidden = false\n            selectedCell.imgView.hidden = false\n            snapImgView.removeFromSuperview()\n            transitionContext.completeTransition(!transitionContext.transitionWasCancelled())\n    }\n}\n```\npop动画的设置还是有几个小坑的：\n1.需要取得控制器跳转前点击的那个cell，这里采用了简化的方法，在cell点击时，将index记录在`selectedIndex`，方便pop的时候直接取用\n2.注意各个视图透明度和hidden的控制\n\n##### 2.设置pop控制器\n重复设置push控制器的流程，在`TTCustomSecondController`中，添加UINavigationControllerDelegate并实现导航代理方法\n``` swift\nfunc navigationController(navigationController: UINavigationController, animationControllerForOperation operation: UINavigationControllerOperation, fromViewController fromVC: UIViewController, toViewController toVC: UIViewController) -> UIViewControllerAnimatedTransitioning? {\n    if fromVC.isEqual(self) && toVC is TTCustomFirstController {\n        return TTCustomPopAnimation()\n    }\n    return nil\n}\n```\n再次启动项目，pop的动画也能够正常工作了\n\n#### 5.手势返回\n跟之前一样，自定义过场之后，右划手势返回会失效，需要重新设置，这里就不重复这部分内容了，但是新的手势需要加到`TTCustomSecondController`控制器内，[自定义手势](http://tsusolo.com/2016/02/01/custom_navigation_transition.html#6-__u53F3_u5212_u8FD4_u56DE_u624B_u52BF)\n\n---\n\n**如果你也喜爱游戏，欢迎支持我的APP**  [Up 游戏专辑](https://itunes.apple.com/app/id986716705)\n![](http://7xq01t.com1.z0.glb.clouddn.com/2016-02-16-1444295065.png)\n","source":"_posts/自定义navigation controller过渡动画 2.md","raw":"title: 自定义navigation controller过渡动画 2\ndate: 2016-02-18 15:33:04\ncategories: Swift过渡指南\npermalink: custom_navigation_transition_2\n---\n\n来自于[PeteC/InteractiveViewControllerTransitions](https://github.com/PeteC/InteractiveViewControllerTransitions)的定制过渡效果，这是个人非常喜欢的一种动画方式，习惯于成为**元素重用**，本章将要用Swift重写这个项目，掌握针对于页面的过渡动画，让自己的APP更具个性化。\n\n[源码见Github](https://github.com/TifaTsubasa/SwiftTransitionExample)\n\n![](http://7xq01t.com1.z0.glb.clouddn.com/tsusolo.com%2Fqiniutransition2.gif)\n<!-- more -->\n页面定制化的过渡方式同样依赖于`UIViewControllerAnimatedTransitioning`, 如果还不是很了解，可以复习一下[自定义navigation controller过渡动画](http://tsusolo.com/2016/02/18/custom_navigation_transition.html)\n\n---\n### 设计思路\n* 整个过渡动画的核心在于图片的移动，看上去是将tableViewCell上的图片移动到下一页控制器的view上，实际上我们会拷贝一份imageView从cell的位置移动到视图中心\n* 动画的其他部分无非与设置各个view的透明度\n\n### 步骤\n#### 1.初始化项目\n* 两层控制器\n* 相应的视图和模型\n* push和pop动画接口\n* 资源文件，详见[源码](https://github.com/TifaTsubasa/SwiftTransitionExample)\n![](http://7xq01t.com1.z0.glb.clouddn.com/tsusolo.com%2Fqiniucustom-transition-finder.png)\n* 控制器的初始化\n![](http://7xq01t.com1.z0.glb.clouddn.com/custom-transition-page1.png)\n![](http://7xq01t.com1.z0.glb.clouddn.com/custom-transition-page2.png)\n初始化的过程比较重复，copy相应的代码就好\n> Swift Tip:\n有一段初始化数据的代码比较有意思，可以感受一下\n这里用到了`lazy`关键字进行懒加载，避免了oc里的判断。在赋值的右边，用到了一个匿名函数，并且紧接括号执行返回数组，比较类似于JavaScript的匿名立即执行函数\n``` swift\n    lazy var things: [TTThing] = {\n        let arr = []  // 通过字面量设置数组\n        return arr\n    }()\n```\n\n\n\n#### 2.设置过渡动画\n上一章已经详细说明过渡动画的设置方式，这里就直接进入核心部分----**动画效果的处理**\n##### 1.过场时间设置\n依旧以push过场为例，在新建的`TTCustomPushAnimation.swift`文件内，首先实现\n``` swift\nfunc transitionDuration(transitionContext: UIViewControllerContextTransitioning?) -> NSTimeInterval {\n    return 1\n}\n```\n设置过场时间为1s，1秒的速度方便调试\n\n##### 2.view获取\n然后来到动画大剧场\n``` swift\nfunc animateTransition(transitionContext: UIViewControllerContextTransitioning)\n```\n在`animateTransition`内中设置\n取得动画所需view\n``` swift\nlet containerView = transitionContext.containerView()\nlet fromVc = transitionContext.viewControllerForKey(UITransitionContextFromViewControllerKey) as! TTCustomFromController\nlet toVc = transitionContext.viewControllerForKey(UITransitionContextToViewControllerKey) as! TTCustomToController\nlet cell = fromVc.collection.cellForItemAtIndexPath((fromVc.collection.indexPathsForSelectedItems()?.first)!) as! TTThingCell\nlet snapImageView = cell.imgView.snapshotViewAfterScreenUpdates(false)\n```\n除了过场必要的containerView、fromVc、toVc之外，我们还要通过collection取得点击的cell，并将这个cell上的ImageView拷贝成`snapImageView`备用\n\n  > Swift Tip:\n这里在取得fromVc、toVc、cell时都用到了`as!`进行强制类型转换，加上感叹号避免在之后调用中的可选解析\n，但是在逻辑上就需要保证相应类型的正确，后面的代码会做相应类型保护\n\n##### 3.过场参数设置\n除了必要的动画时间,还需要获得`snapImageView`在动画中的起始frame和终止frame(frame同时影响位置和大小)\n``` swift\nlet duration = self.transitionDuration(transitionContext)\nlet startFrame = cell.imgView.superview!.convertRect(cell.imgView.frame, toView: containerView)\nlet finalFrame = toVc.view.convertRect(toVc.imgView.frame, toView: containerView)\n```\n记得动画舞台`containerView`么，`snapImageView`会在整个过场中置于其中进行动画操作，所以我们使用`convertRect`将Cell上imageView的frame转换到containerView作为起始frame，将toVc上imageView转换到containerView作为终止frame\n![](http://7xq01t.com1.z0.glb.clouddn.com/animation-demo.png)\n\n##### 4.动画初始化\n获得所有动画所需的属性后，接下来就是动画的准备活动了\n1.将toVc的视图和snapImageView添加到containerView上\n2.将snapImageView的frame设置到起始frame，以覆盖Cell上的imageView，并将Cell的imageView隐藏\n3.将toVc的视图透明度设置为0，并隐藏toVc上的imageView\n``` swift\ncontainerView?.addSubview(toVc.view)\ncontainerView?.addSubview(snapImageView)\n\nsnapImageView.frame = startFrame\ncell.imgView.hidden = true\ntoVc.view.alpha = 0\ntoVc.imgView.hidden = true\n```\n\n##### 5.动画设置\n在整个动画中只有2个流程\n1.让toVc的视图逐渐显示出来\n2.将snapImageView移动到终止frame\n``` swift\nUIView.animateWithDuration(duration, animations: { () -> Void in\n    toVc.view.alpha = 1\n    snapImageView.frame = finalFrame\n    }) { (finished) -> Void in\n        toVc.imgView.hidden = false\n        cell.imgView.hidden = false\n        snapImageView.removeFromSuperview()\n        transitionContext.completeTransition(!transitionContext.transitionWasCancelled())\n}\n```\n动画结束之后，记得收场哦\n1.移除snapImageView，并将toVc上的imageView显示出来\n2.将cell上的imageView恢复显示\n3.清除过场\n\n#### 3.设置push控制器\n老规矩，上述操作写好了剧本，得让演员上台表演了。由于这里是定制的过场动画，并不能重写导航去影响所有的过场，所以需要指定的演员`TTCustomFirstController`\n在TTCustomFirstController中，添加`UINavigationControllerDelegate`，显示控制器时添加代码，不显示时移除\n``` swift\noverride func viewWillAppear(animated: Bool) {\n    super.viewWillAppear(animated)\n    self.navigationController?.delegate = self\n}\n\noverride func viewWillDisappear(animated: Bool) {\n    super.viewWillDisappear(animated)\n    if let _ = self.navigationController?.delegate {\n        self.navigationController?.delegate = nil\n    }\n}\n```\n\n然后声明此控制器的过场方式\n``` swift\nfunc navigationController(navigationController: UINavigationController, animationControllerForOperation operation: UINavigationControllerOperation, fromViewController fromVC: UIViewController, toViewController toVC: UIViewController) -> UIViewControllerAnimatedTransitioning? {\n    if fromVC == self && toVC is TTCustomSecondController {\n        return TTCustomPushAnimation()\n    }\n    return nil\n}\n```\n在导航的代理方法中，我们返回了自定义的过场动画接口，并对fromVc和toVc都做了类型判断，还记得我们在上面用到的`as!`强制类型转换么，这里的判断能保证类型的正确使用\n重启程序，push的过场已经和预期的是一样的了 ☺️\n\n#### 4.设置pop动画\npush动画已经设置完毕，pop动画依旧是push的逆向过程\n##### 1.初始化pop过场动画\n新建`TTCustomPopAnimation`，实现UIViewControllerAnimatedTransitioning的两个方法，这里直接贴出pop动画的设置代码\n**依旧需要注意的是fromVc和toVc对应的控制器**\n``` swift\nfunc animateTransition(transitionContext: UIViewControllerContextTransitioning) {\n    let containerView = transitionContext.containerView()\n    let fromVc = transitionContext.viewControllerForKey(UITransitionContextFromViewControllerKey) as! TTCustomSecondController\n    let toVc = transitionContext.viewControllerForKey(UITransitionContextToViewControllerKey) as! TTCustomFirstController\n    let selectedCell = toVc.collection.cellForItemAtIndexPath(toVc.selectedIndex!) as! TTThingCell\n    let snapImgView = fromVc.imgView.snapshotViewAfterScreenUpdates(false)\n\n    let duration = self.transitionDuration(transitionContext)\n    let startFrame = fromVc.view.convertRect(fromVc.imgView.frame, toView: containerView)\n    let finalFrame = selectedCell.imgView.convertRect(selectedCell.imgView.frame, toView: containerView)\n\n    snapImgView.frame = startFrame\n    fromVc.imgView.hidden = true\n    toVc.view.alpha = 0\n\n    containerView?.insertSubview(toVc.view, belowSubview: fromVc.view)\n    containerView?.addSubview(snapImgView)\n\n    UIView.animateWithDuration(duration, animations: { () -> Void in\n        toVc.view.alpha = 1\n        fromVc.view.alpha = 0\n        snapImgView.frame = finalFrame\n        }) { (finished) -> Void in\n            fromVc.imgView.hidden = false\n            selectedCell.imgView.hidden = false\n            snapImgView.removeFromSuperview()\n            transitionContext.completeTransition(!transitionContext.transitionWasCancelled())\n    }\n}\n```\npop动画的设置还是有几个小坑的：\n1.需要取得控制器跳转前点击的那个cell，这里采用了简化的方法，在cell点击时，将index记录在`selectedIndex`，方便pop的时候直接取用\n2.注意各个视图透明度和hidden的控制\n\n##### 2.设置pop控制器\n重复设置push控制器的流程，在`TTCustomSecondController`中，添加UINavigationControllerDelegate并实现导航代理方法\n``` swift\nfunc navigationController(navigationController: UINavigationController, animationControllerForOperation operation: UINavigationControllerOperation, fromViewController fromVC: UIViewController, toViewController toVC: UIViewController) -> UIViewControllerAnimatedTransitioning? {\n    if fromVC.isEqual(self) && toVC is TTCustomFirstController {\n        return TTCustomPopAnimation()\n    }\n    return nil\n}\n```\n再次启动项目，pop的动画也能够正常工作了\n\n#### 5.手势返回\n跟之前一样，自定义过场之后，右划手势返回会失效，需要重新设置，这里就不重复这部分内容了，但是新的手势需要加到`TTCustomSecondController`控制器内，[自定义手势](http://tsusolo.com/2016/02/01/custom_navigation_transition.html#6-__u53F3_u5212_u8FD4_u56DE_u624B_u52BF)\n\n---\n\n**如果你也喜爱游戏，欢迎支持我的APP**  [Up 游戏专辑](https://itunes.apple.com/app/id986716705)\n![](http://7xq01t.com1.z0.glb.clouddn.com/2016-02-16-1444295065.png)\n","slug":"custom_navigation_transition_2","published":1,"updated":"2016-02-26T09:24:07.000Z","_id":"cil3a2tmi00095w2rgeo5bzye","comments":1,"layout":"post","photos":[],"link":""},{"title":"在iOS项目中导入React Native","date":"2016-04-05T03:23:05.000Z","_content":"\nReact Native的势头越来越猛，但凡提及Native，皆是一片666，大有替代原生APP的趋势，也许Native有着大好形势，但目前看来，尚有太多不足。\n![Alt text](http://7xq01t.com1.z0.glb.clouddn.com/simple-native-logo.JPG)\n<!--more-->\n\n### 开始\n##### 在iOS原生项目中动态使用React Native定制界面\n如果你已经是一个iOS开发者，继续原生项目开发可能是更好的选择，而React Native，也许更加适合原生项目中部分动态页(例如广告、咨询详情)的编写，方便页面的多端重用和即时修改。\n[完整项目Github地址](https://github.com/TifaTsubasa/SimpleNative)\n\n#### 1.安装环境\n如果你之前只接触过iOS开发，使用终端也仅限于CocoaPods、Git，那么环境配置一定会费一番劲。\n* 安装Node.js\n\tNode.js官方下载：[https://nodejs.org/en/download/](https://nodejs.org/en/download/)\n\t在官网可以下载到对应系统的Node安装包，非常简单\n\t> 推荐使用nvm安装管理Node.js，能够更好的控制node的版本\n\tnvm github地址：[https://github.com/creationix/nvm](https://github.com/creationix/nvm)\n\t中文安装方法：[http://www.tuicool.com/articles/vmi6Zv7](http://www.tuicool.com/articles/vmi6Zv7)\n\t\n* 安装CocoaPods\n\tCocoaPods是iOS开发最常用的依赖管理工具\n\tCocoaPods安装使用方法：[唐巧blog](http://blog.devtang.com/2014/05/25/use-cocoapod-to-manage-ios-lib-dependency/)\n\n#### 2.iOS原生项目\n我们需要准备一个简单的原生项目`SimpleNative`，选用的语言是**Swift**\n在`Main.storyboard`中初始化项目框架：导航控制器内有两层视图控制器，在第一层Controller中居中设置一个button用来push，第二层Controller空白待用\n![Alt text](http://7xq01t.com1.z0.glb.clouddn.com/simple-native-natigation.png)\n\n\n#### 3.初始化React Native的node依赖\n##### 1.初始化node\n在终端中，定位到iOS项目的根目录，运行\n`npm init`\n然后一路回车即可\n> 注意：node项目的命名不能使用大写字母，所以指定name时输入`simple-native` 后回车\n\n执行完毕之后，在项目根目录下生成了一个`package.json`文件，类似于CocoaPods的`Podfile`文件，用来管理项目依赖\n\n##### 2.安装React Native\n再项目根目录下运行\n`npm install --save react-native`\n> 由于国内的网络问题，npm安装比较缓慢，可以使用[淘宝npm镜像](http://npm.taobao.org/)替代\n\n安装完毕之后，根目录下会生成`node_modules`文件夹，里面保存了`react`和`react-native`的依赖\n`--save`参数会在`package.json`文件中保存`react`和`react-native`的依赖声明\n\n#### 4.初始化CocoaPods\n在项目根目录下，运行\n`pod init`\n在项目根目录下生成了`Podfile`，用任何编辑器打开，编写React Native的依赖\n``` ruby\nplatform :ios, '7.0'\n\ntarget 'SimpleNative' do\n  pod 'React', :path => './node_modules/react-native', :subspecs => [\n    'Core',\n    'RCTImage',\n    'RCTNetwork',\n    'RCTText',\n    'RCTWebSocket',\n    # Add any other subspecs you want to use in your project\n  ]\nend\n\ntarget 'SimpleNativeTests' do\n\nend\n\ntarget 'SimpleNativeUITests' do\n\nend\n```\n在项目的target下，pod导入`React`，路径指向了当前目录下`'./node_modules/react-native'`，然后还有一堆乱七八糟的子依赖(一个都不能少！)\n运行`pod install`安装依赖，本地安装速度很快\n\n#### 5.绑定Native的视图\n##### 1.导入Native View\n由于使用的是Swift项目，我们需要一个OC-Swift桥接文件导入Native的类，在桥接文件夹导入\n`#import <RCTRootView.h>`\n\n##### 2.设置Native View\n点击`SimpleNative.xcworkspace`打开iOS项目，新建一个`ReactView`继承于UIView，并为这个view添加RCTRootView的子视图\n``` swift\nimport UIKit\n\nclass ReactView: UIView {\n    \n    weak var rootView: RCTRootView!\n    \n    required init?(coder aDecoder: NSCoder) {\n        super.init(coder: aDecoder)\n        \n        let jsCodeLocation = NSURL(string: \"http://localhost:8081/index.ios.bundle?platform=ios\")\n        let rootView = RCTRootView(bundleURL: jsCodeLocation, moduleName: \"SimpleNative\", initialProperties: nil, launchOptions: nil)\n        self.rootView = rootView\n        self.addSubview(rootView)\n    }\n    \n    override func layoutSubviews() {\n        super.layoutSubviews()\n        rootView.frame = self.bounds\n    }\n}\n```\n然后在第二层控制器中居中显示一个View，并绑定为`ReactView`\n![Alt text](http://7xq01t.com1.z0.glb.clouddn.com/simple-native-react-view.png)\n\n再次运行项目，点击push按钮后，就会见到第一个红彤彤的Native错误了，但是这表示已经成功绑定了Native\n![Alt text](http://7xq01t.com1.z0.glb.clouddn.com/simple-native-error)\n\n#### 6.启动Native服务\n在ReactView的初始化中，我们为rootView指定了bundleURL和moduleName，其中moduleName既是当前项目名，而bundleURL，就要一步一步实现了，步步都是坑😓\n##### 1.新建index.ios.js\n在项目根目标下，新建ReactComponents文件夹，并在文件夹中新建`index.ios.js`文件，在js文件中\n写入react代码\n官方推荐的简单代码为\n``` javascript\n'use strict';\n\nimport React, {\n  Text,\n  View\n} from 'react-native';\n\nvar styles = React.StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'red'\n  }\n});\n\nclass SimpleNative extends React.Component {\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text>This is a simple application.</Text>\n      </View>\n    )\n  }\n}\n\nReact.AppRegistry.registerComponent('SimpleNative', () => SimpleNative);\n```\n> 如果你希望显示一个更帅气的Native界面，可以拷贝链接代码：[Github搜索页](http://7xq01t.com1.z0.glb.clouddn.com/index.ios.js)\n\n##### 2.启动node服务\n建好了js文件，需要启动一个端口为8081的服务将index.ios.js打包成index.ios.bundle\n在项目根目录下运行\n```\n(JS_DIR=`pwd`/ReactComponents; cd node_modules/react-native; npm run start -- --root $JS_DIR)\n```\n分解一下命令：\n1.将新建的ReactComponents文件夹目录赋值到JS_DIR上，注意需要是全路径！！！\n2.进入`node_modules/react-native`\n3.绑定`JS_DIR`会监听ReactComponents文件夹下的文件，然后`npm run start`启动native的node服务\n4.三行命令最好用()包装起来，可以避免运行后定位到`node_modules/react-native`文件夹下\n\n**再次运行iOS项目，当然也可以直接在模拟器上 Commend + R刷新，就会获得另一个错误。。。**\n~~~~~\n##### 3.开启Http支持\n苹果在iOS9之后默认关闭了对HTTP的支持，需要打开以访问localhost的服务\n在iOS项目的`Info.plist`文件中，加入\n``` xml\n<key>NSAppTransportSecurity</key>\n<dict>\n    <key>NSExceptionDomains</key>\n    <dict>\n        <key>localhost</key>\n        <dict>\n            <key>NSTemporaryExceptionAllowsInsecureHTTPLoads</key>\n            <true/>\n        </dict>\n    </dict>\n</dict>\n```\n加入后，plist看起来是这样的\n![Alt text](http://7xq01t.com1.z0.glb.clouddn.com/simple-native-pllist)\n更多关于[App Transport Security](http://stackoverflow.com/questions/31254725/transport-security-has-blocked-a-cleartext-http)\n\n#### 7.最后\n重新运行iOS项目，点击push按钮后，在绿色加载条之后(第一次打包编译比较慢)，就能看到native的界面了，在搜索栏输入内容后回车，能够简单搜索Github内容（需要在index.ios.js添加[Github搜索页](http://7xq01t.com1.z0.glb.clouddn.com/index.ios.js)代码）\n![Alt text](http://7xq01t.com1.z0.glb.clouddn.com/simple-native-github-search)\n\n如果将ReactView放置全屏显示，就更像一个原生的应用了 😉\n\n---\n**如果你也喜爱游戏，欢迎支持我的APP**  [Up 游戏专辑](https://itunes.apple.com/app/id986716705)\n![](http://7xq01t.com1.z0.glb.clouddn.com/2016-02-16-1444295065.png)\n","source":"_posts/在iOS项目中导入React Native.md","raw":"---\ntitle: 在iOS项目中导入React Native\ndate: 2016-04-5 11:23:05\ncategories: React Native\npermalink: react-native-in-iOS\n---\n\nReact Native的势头越来越猛，但凡提及Native，皆是一片666，大有替代原生APP的趋势，也许Native有着大好形势，但目前看来，尚有太多不足。\n![Alt text](http://7xq01t.com1.z0.glb.clouddn.com/simple-native-logo.JPG)\n<!--more-->\n\n### 开始\n##### 在iOS原生项目中动态使用React Native定制界面\n如果你已经是一个iOS开发者，继续原生项目开发可能是更好的选择，而React Native，也许更加适合原生项目中部分动态页(例如广告、咨询详情)的编写，方便页面的多端重用和即时修改。\n[完整项目Github地址](https://github.com/TifaTsubasa/SimpleNative)\n\n#### 1.安装环境\n如果你之前只接触过iOS开发，使用终端也仅限于CocoaPods、Git，那么环境配置一定会费一番劲。\n* 安装Node.js\n\tNode.js官方下载：[https://nodejs.org/en/download/](https://nodejs.org/en/download/)\n\t在官网可以下载到对应系统的Node安装包，非常简单\n\t> 推荐使用nvm安装管理Node.js，能够更好的控制node的版本\n\tnvm github地址：[https://github.com/creationix/nvm](https://github.com/creationix/nvm)\n\t中文安装方法：[http://www.tuicool.com/articles/vmi6Zv7](http://www.tuicool.com/articles/vmi6Zv7)\n\t\n* 安装CocoaPods\n\tCocoaPods是iOS开发最常用的依赖管理工具\n\tCocoaPods安装使用方法：[唐巧blog](http://blog.devtang.com/2014/05/25/use-cocoapod-to-manage-ios-lib-dependency/)\n\n#### 2.iOS原生项目\n我们需要准备一个简单的原生项目`SimpleNative`，选用的语言是**Swift**\n在`Main.storyboard`中初始化项目框架：导航控制器内有两层视图控制器，在第一层Controller中居中设置一个button用来push，第二层Controller空白待用\n![Alt text](http://7xq01t.com1.z0.glb.clouddn.com/simple-native-natigation.png)\n\n\n#### 3.初始化React Native的node依赖\n##### 1.初始化node\n在终端中，定位到iOS项目的根目录，运行\n`npm init`\n然后一路回车即可\n> 注意：node项目的命名不能使用大写字母，所以指定name时输入`simple-native` 后回车\n\n执行完毕之后，在项目根目录下生成了一个`package.json`文件，类似于CocoaPods的`Podfile`文件，用来管理项目依赖\n\n##### 2.安装React Native\n再项目根目录下运行\n`npm install --save react-native`\n> 由于国内的网络问题，npm安装比较缓慢，可以使用[淘宝npm镜像](http://npm.taobao.org/)替代\n\n安装完毕之后，根目录下会生成`node_modules`文件夹，里面保存了`react`和`react-native`的依赖\n`--save`参数会在`package.json`文件中保存`react`和`react-native`的依赖声明\n\n#### 4.初始化CocoaPods\n在项目根目录下，运行\n`pod init`\n在项目根目录下生成了`Podfile`，用任何编辑器打开，编写React Native的依赖\n``` ruby\nplatform :ios, '7.0'\n\ntarget 'SimpleNative' do\n  pod 'React', :path => './node_modules/react-native', :subspecs => [\n    'Core',\n    'RCTImage',\n    'RCTNetwork',\n    'RCTText',\n    'RCTWebSocket',\n    # Add any other subspecs you want to use in your project\n  ]\nend\n\ntarget 'SimpleNativeTests' do\n\nend\n\ntarget 'SimpleNativeUITests' do\n\nend\n```\n在项目的target下，pod导入`React`，路径指向了当前目录下`'./node_modules/react-native'`，然后还有一堆乱七八糟的子依赖(一个都不能少！)\n运行`pod install`安装依赖，本地安装速度很快\n\n#### 5.绑定Native的视图\n##### 1.导入Native View\n由于使用的是Swift项目，我们需要一个OC-Swift桥接文件导入Native的类，在桥接文件夹导入\n`#import <RCTRootView.h>`\n\n##### 2.设置Native View\n点击`SimpleNative.xcworkspace`打开iOS项目，新建一个`ReactView`继承于UIView，并为这个view添加RCTRootView的子视图\n``` swift\nimport UIKit\n\nclass ReactView: UIView {\n    \n    weak var rootView: RCTRootView!\n    \n    required init?(coder aDecoder: NSCoder) {\n        super.init(coder: aDecoder)\n        \n        let jsCodeLocation = NSURL(string: \"http://localhost:8081/index.ios.bundle?platform=ios\")\n        let rootView = RCTRootView(bundleURL: jsCodeLocation, moduleName: \"SimpleNative\", initialProperties: nil, launchOptions: nil)\n        self.rootView = rootView\n        self.addSubview(rootView)\n    }\n    \n    override func layoutSubviews() {\n        super.layoutSubviews()\n        rootView.frame = self.bounds\n    }\n}\n```\n然后在第二层控制器中居中显示一个View，并绑定为`ReactView`\n![Alt text](http://7xq01t.com1.z0.glb.clouddn.com/simple-native-react-view.png)\n\n再次运行项目，点击push按钮后，就会见到第一个红彤彤的Native错误了，但是这表示已经成功绑定了Native\n![Alt text](http://7xq01t.com1.z0.glb.clouddn.com/simple-native-error)\n\n#### 6.启动Native服务\n在ReactView的初始化中，我们为rootView指定了bundleURL和moduleName，其中moduleName既是当前项目名，而bundleURL，就要一步一步实现了，步步都是坑😓\n##### 1.新建index.ios.js\n在项目根目标下，新建ReactComponents文件夹，并在文件夹中新建`index.ios.js`文件，在js文件中\n写入react代码\n官方推荐的简单代码为\n``` javascript\n'use strict';\n\nimport React, {\n  Text,\n  View\n} from 'react-native';\n\nvar styles = React.StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'red'\n  }\n});\n\nclass SimpleNative extends React.Component {\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text>This is a simple application.</Text>\n      </View>\n    )\n  }\n}\n\nReact.AppRegistry.registerComponent('SimpleNative', () => SimpleNative);\n```\n> 如果你希望显示一个更帅气的Native界面，可以拷贝链接代码：[Github搜索页](http://7xq01t.com1.z0.glb.clouddn.com/index.ios.js)\n\n##### 2.启动node服务\n建好了js文件，需要启动一个端口为8081的服务将index.ios.js打包成index.ios.bundle\n在项目根目录下运行\n```\n(JS_DIR=`pwd`/ReactComponents; cd node_modules/react-native; npm run start -- --root $JS_DIR)\n```\n分解一下命令：\n1.将新建的ReactComponents文件夹目录赋值到JS_DIR上，注意需要是全路径！！！\n2.进入`node_modules/react-native`\n3.绑定`JS_DIR`会监听ReactComponents文件夹下的文件，然后`npm run start`启动native的node服务\n4.三行命令最好用()包装起来，可以避免运行后定位到`node_modules/react-native`文件夹下\n\n**再次运行iOS项目，当然也可以直接在模拟器上 Commend + R刷新，就会获得另一个错误。。。**\n~~~~~\n##### 3.开启Http支持\n苹果在iOS9之后默认关闭了对HTTP的支持，需要打开以访问localhost的服务\n在iOS项目的`Info.plist`文件中，加入\n``` xml\n<key>NSAppTransportSecurity</key>\n<dict>\n    <key>NSExceptionDomains</key>\n    <dict>\n        <key>localhost</key>\n        <dict>\n            <key>NSTemporaryExceptionAllowsInsecureHTTPLoads</key>\n            <true/>\n        </dict>\n    </dict>\n</dict>\n```\n加入后，plist看起来是这样的\n![Alt text](http://7xq01t.com1.z0.glb.clouddn.com/simple-native-pllist)\n更多关于[App Transport Security](http://stackoverflow.com/questions/31254725/transport-security-has-blocked-a-cleartext-http)\n\n#### 7.最后\n重新运行iOS项目，点击push按钮后，在绿色加载条之后(第一次打包编译比较慢)，就能看到native的界面了，在搜索栏输入内容后回车，能够简单搜索Github内容（需要在index.ios.js添加[Github搜索页](http://7xq01t.com1.z0.glb.clouddn.com/index.ios.js)代码）\n![Alt text](http://7xq01t.com1.z0.glb.clouddn.com/simple-native-github-search)\n\n如果将ReactView放置全屏显示，就更像一个原生的应用了 😉\n\n---\n**如果你也喜爱游戏，欢迎支持我的APP**  [Up 游戏专辑](https://itunes.apple.com/app/id986716705)\n![](http://7xq01t.com1.z0.glb.clouddn.com/2016-02-16-1444295065.png)\n","slug":"react-native-in-iOS","published":1,"updated":"2016-04-05T13:07:41.000Z","_id":"cimmuljt30000nsc5nb75y6pf","comments":1,"layout":"post","photos":[],"link":""}],"PostAsset":[],"PostCategory":[{"post_id":"cil3a2tkr00005w2rpksp4drn","category_id":"cil3a2tkw00015w2r2jkgtj9m","_id":"cil3a2tky00025w2r6gs6m60s"},{"post_id":"cil3a2tmg00065w2rwi4x56s4","category_id":"cil3a2tmh00075w2rpvgg9yqn","_id":"cil3a2tmh00085w2rsukzm6zb"},{"post_id":"cil3a2tmi00095w2rgeo5bzye","category_id":"cil3a2tmh00075w2rpvgg9yqn","_id":"cil3hsof90000yf2r8gcm6p4o"},{"post_id":"cimmuljt30000nsc5nb75y6pf","category_id":"cimmuljte0001nsc5qtssdhso","_id":"cimnfzn6r0000546n8mgz4g98"}],"PostTag":[],"Tag":[]}}